     1                                  ; external functions from X11 library
     2                                  extern XOpenDisplay
     3                                  extern XDisplayName
     4                                  extern XCloseDisplay
     5                                  extern XCreateSimpleWindow
     6                                  extern XMapWindow
     7                                  extern XRootWindow
     8                                  extern XSelectInput
     9                                  extern XFlush
    10                                  extern XCreateGC
    11                                  extern XSetForeground
    12                                  extern XDrawLine
    13                                  extern XDrawPoint
    14                                  extern XFillArc
    15                                  extern XNextEvent
    16                                  
    17                                  ; external functions from stdio library (ld-linux-x86-64.so.2)    
    18                                  extern printf
    19                                  extern exit
    20                                  
    21                                  %define	StructureNotifyMask	131072
    22                                  %define KeyPressMask		1
    23                                  %define ButtonPressMask		4
    24                                  %define MapNotify		19
    25                                  %define KeyPress		2
    26                                  %define ButtonPress		4
    27                                  %define Expose			12
    28                                  %define ConfigureNotify		22
    29                                  %define CreateNotify 16
    30                                  %define QWORD	8
    31                                  %define DWORD	4
    32                                  %define WORD	2
    33                                  %define BYTE	1
    34                                  
    35                                  global orientation
    36                                  orientation:
    37                                      ; Coord de P dans di et si
    38                                      ; Coord de I dans dx et cx
    39                                      ; Coord de Q dans r8w et r9w
    40                                      
    41                                      ; cx sera bientôt modifié mais on doit l'utiliser 2 fois
    42                                      ; Donc on le sauvegarde
    43 00000000 6651                        push cx
    44 00000002 6629F1                      sub cx, si
    45 00000005 664129D0                    sub r8w, dx
    46                                      
    47 00000009 66410FAFC8                  imul cx, r8w
    48                                      
    49                                      ; Nous n'utiliserons plus si
    50                                      ; Donc nous restaurons la valeur de cx dans si
    51 0000000E 665E                        pop si
    52 00000010 6629FA                      sub dx, di
    53 00000013 664129F1                    sub r9w, si
    54                                      
    55 00000017 66410FAFD1                  imul dx, r9w
    56                                      
    57 0000001C 6629D1                      sub cx, dx
    58                                      
    59 0000001F 83F900                      cmp ecx, 0
    60 00000022 7E07                        jle clockwise
    61                                      
    62 00000024 B801000000                  mov eax, 1
    63 00000029 EB05                        jmp endori
    64                                      
    65                                      clockwise:
    66 0000002B B800000000                  mov eax, 0
    67                                      
    68                                      endori:
    69 00000030 C3                      ret
    70                                  
    71                                  global main
    72                                  
    73                                  %DEFINE NUM_POINTS 7
    74                                  %DEFINE MAX_X 255
    75                                  %DEFINE MAX_Y 255
    76                                  
    77                                  section .data
    78 00000000 0000000000000000-       event:		times	24 dq 0
    78 00000000 <rep 18h>          
    79                                  
    80 000000C0 00000000                x1:	dd	0
    81 000000C4 00000000                x2:	dd	0
    82 000000C8 00000000                y1:	dd	0
    83 000000CC 00000000                y2:	dd	0
    84                                  
    85 000000D0 25640A00                fmt_printf: db "%d", 10, 0
    86 000000D4 76733A2025640A00        fmt_index: db "vs: %d", 10, 0
    87 000000DC 4D696E696D756D3A20-     fmt_min: db "Minimum: %d", 10, 0
    87 000000E5 25640A00           
    88                                  
    89 000000E9 546573740A00            test: db "Test", 10, 0
    90 000000EF 78203A2025640A00        printx: db "x : %d", 10, 0
    91 000000F7 79203A2025640A00        printy: db "y : %d", 10, 0
    92 000000FF 4F6E2074657374206C-     jpp: db "On test le point: %d...", 10, 0
    92 00000108 6520706F696E743A20-
    92 00000111 25642E2E2E0A00     
    93 00000118 417520505620646520-     jenaismarre: db "Au PV de %d...", 10, 0
    93 00000121 25642E2E2E0A00     
    94 00000128 446570756973206C65-     tuezmoi: db "Depuis le point %d", 10, 0
    94 00000131 20706F696E74202564-
    94 0000013A 0A00               
    95 0000013C 456E76656C6F707065-     env: db "Enveloppe: %d", 10, 0
    95 00000145 3A2025640A00       
    96 0000014B 436F65663A2025640A-     coef: db "Coef: %d", 10, 0
    96 00000154 00                 
    97 00000155 526573756C7461743A-     resultat: db "Resultat: %d", 10, 0
    97 0000015E 2025640A00         
    98                                  
    99                                  ;coordx: dw 0, 2, 1, 2, 3, 0, 3
   100                                  ;coordy: dw 0, 2, 1, 2, 3, 0, 3
   101                                  
   102                                  section .bss
   103 00000000 ????????????????        display_name:	resq	1
   104 00000008 ????????                screen:		resd	1
   105 0000000C ????????                depth:         	resd	1
   106 00000010 ????????                connection:    	resd	1
   107 00000014 ????????                width:         	resd	1
   108 00000018 ????????                height:        	resd	1
   109 0000001C ????????????????        window:		resq	1
   110 00000024 ????????????????        gc:		resq	1
   111                                  
   112 0000002C <res Eh>                coordx: resw NUM_POINTS
   113 0000003A <res Eh>                coordy: resw NUM_POINTS
   114 00000048 <res Eh>                enveloppe: resw NUM_POINTS
   115 00000056 ??                      sizeEnveloppe: resb 1
   116 00000057 ????                    randnum: resw 1
   117 00000059 ????                    minpoint: resw 1
   118                                  
   119 0000005B ????                    P: resw 1
   120 0000005D ????                    Q: resw 1
   121 0000005F ????                    I: resw 1
   122                                  
   123                                  section .text
   124                                  
   125                                  main:
   126                                  ; Génération des points du programme
   127 00000031 BB00000000              mov rbx, 0
   128                                  populatex:
   129 00000036 660FC7F0                    rdrand ax
   130 0000003A 66890425[57000000]          mov [randnum], ax
   131                                      modx:
   132 00000042 66812C25[57000000]-             sub word[randnum], MAX_X
   132 0000004A FF00               
   133 0000004C 66813C25[57000000]-             cmp word[randnum], MAX_X
   133 00000054 FF00               
   134 00000056 73EA                            jae modx
   135 00000058 668B0425[57000000]          mov ax, word[randnum]
   136 00000060 6689841B[2C000000]          mov word[coordx+rbx*2], ax
   137                                      
   138 00000068 48FFC3                      inc rbx
   139 0000006B 4883FB07                    cmp rbx, NUM_POINTS
   140 0000006F 72C5                        jb populatex
   141                                  
   142 00000071 BB00000000              mov rbx, 0
   143                                  populatey:
   144 00000076 F9                          stc
   145                                      checkcf:
   146 00000077 660FC7F0                        rdrand ax
   147 0000007B 73FA                        jnc checkcf
   148 0000007D 66890425[57000000]          mov word[randnum], ax
   149                                      mody:
   150 00000085 66812C25[57000000]-             sub word[randnum], MAX_Y
   150 0000008D FF00               
   151 0000008F 66813C25[57000000]-             cmp word[randnum], MAX_Y
   151 00000097 FF00               
   152 00000099 73EA                            jae mody
   153 0000009B 668B0425[57000000]          mov ax, word[randnum]
   154 000000A3 6689841B[3A000000]          mov word[coordy+rbx*2], ax
   155                                  
   156 000000AB 48FFC3                      inc rbx
   157 000000AE 4883FB07                    cmp rbx, NUM_POINTS
   158 000000B2 72C2                        jb populatey
   159                                      
   160 000000B4 BB00000000              mov rbx, 0
   161                                  printloop:
   162 000000B9 48BF-                       mov rdi, printx
   162 000000BB [EF00000000000000] 
   163 000000C3 480FB7B41B-                 movzx rsi, word[coordx+rbx*2]
   163 000000C8 [2C000000]         
   164 000000CC B800000000                  mov rax, 0
   165 000000D1 E8(00000000)                call printf
   166                                      
   167 000000D6 48BF-                       mov rdi, printy
   167 000000D8 [F700000000000000] 
   168 000000E0 480FB7B41B-                 movzx rsi, word[coordy+rbx*2]
   168 000000E5 [3A000000]         
   169 000000E9 B800000000                  mov rax, 0
   170 000000EE E8(00000000)                call printf
   171                                      
   172 000000F3 48FFC3                      inc rbx
   173 000000F6 4883FB07                    cmp rbx, NUM_POINTS
   174 000000FA 72BD                        jb printloop
   175                                  
   176                                  ; Trouver le point le plus à gauche
   177 000000FC BB00000000              mov rbx, 0
   178 00000101 66891C25[59000000]      mov word[minpoint], bx
   179 00000109 48FFC3                  inc rbx
   180                                  minAlgo:
   181                                      ; On récupère le point minimum actuel
   182 0000010C 480FB70C25-                 movzx rcx, word[minpoint]
   182 00000111 [59000000]         
   183 00000115 480FB78409-                 movzx rax, word[coordx+rcx*2]
   183 0000011A [2C000000]         
   184                                      
   185                                      ; On le compare au point parcouru actuel
   186 0000011E 663B841B[2C000000]          cmp ax, word[coordx+rbx*2]
   187 00000126 760B                        jbe lower
   188                                              
   189                                      ; Si minpoint > point actuel, on mets point actuel dans minpoint
   190 00000128 4889D8                      mov rax, rbx
   191 0000012B 66890425[59000000]          mov word[minpoint], ax
   192                                  
   193                                      lower:
   194 00000133 48FFC3                      inc rbx
   195 00000136 4883FB07                    cmp rbx, NUM_POINTS
   196 0000013A 72D0                        jb minAlgo
   197                                      
   198                                  ; Une fois cette étape fini, nous connaissons le point le plus à gauche.
   199                                  ; Marche de Jarvis
   200                                  ; rax = Prochain point (P)
   201                                  ; rbx = Index actuel de enveloppe (Pas d'équivalent, à ne pas utiliser pr l'instant)
   202                                  ; rcx = Prochain candidat de P (Q)
   203 0000013C 4831C0                  xor rax, rax
   204 0000013F 668B0425[59000000]      mov ax, word[minpoint]
   205 00000147 66890425[5B000000]      mov word[P], ax
   206 0000014F 66C70425[56000000]-     mov word[sizeEnveloppe], 0
   206 00000157 0000               
   207                                  jarvis:
   208 00000159 668B0425[5B000000]          mov ax, word[P]
   209 00000161 480FB71C25-                 movzx rbx, word[sizeEnveloppe]
   209 00000166 [56000000]         
   210 0000016A 6689841B[48000000]          mov [enveloppe+rbx*2], ax
   211                                      
   212 00000172 66890425[5D000000]          mov word[Q], ax
   213 0000017A 66FF0425[5D000000]          inc word[Q]
   214 00000182 66833C25[5D000000]-         cmp word[Q], NUM_POINTS
   214 0000018A 07                 
   215 0000018B 7209                        jb nofix
   216                                      
   217 0000018D 66832C25[5D000000]-         sub word[Q], NUM_POINTS
   217 00000195 07                 
   218                                      
   219                                      nofix:
   220 00000196 66C70425[5F000000]-         mov word[I], 0
   220 0000019E 0000               
   221                                      parcoursListe:
   222                                          ; Coord de P dans di et si
   223 000001A0 480FB70425-                     movzx rax, word[P]
   223 000001A5 [5B000000]         
   224 000001A9 668BBC00[2C000000]              mov di, word[coordx+rax*2]
   225 000001B1 668BB400[3A000000]              mov si, word[coordy+rax*2]
   226                                          
   227                                          ; Coord de I dans dx et cx
   228 000001B9 480FB70425-                     movzx rax, word[I]
   228 000001BE [5F000000]         
   229 000001C2 668B9400[2C000000]              mov dx, word[coordx+rax*2]
   230 000001CA 668B8C00[3A000000]              mov cx, word[coordy+rax*2]
   231                                          
   232                                          ; Coord de Q dans r8w et r9w
   233 000001D2 480FB70425-                     movzx rax, word[Q]
   233 000001D7 [5D000000]         
   234 000001DB 66448B8400-                     mov r8w, word[coordx+rax*2]
   234 000001E0 [2C000000]         
   235 000001E4 66448B8C00-                     mov r9w, word[coordy+rax*2]
   235 000001E9 [3A000000]         
   236 000001ED B800000000                      mov rax, 0
   237 000001F2 E809FEFFFF                      call orientation
   238                                          
   239 000001F7 83F800                          cmp eax, 0
   240 000001FA 7E11                            jle nocandid
   241                                          
   242 000001FC 480FB71C25-                     movzx rbx, word[I]
   242 00000201 [5F000000]         
   243 00000205 66891C25[5D000000]              mov word[Q], bx
   244                                          
   245                                          nocandid:
   246                                          
   247 0000020D 66FF0425[5F000000]              inc word[I]
   248 00000215 66833C25[5F000000]-             cmp word[I], NUM_POINTS
   248 0000021D 07                 
   249 0000021E 7280                            jb parcoursListe    
   250 00000220 668B1C25[5D000000]          mov bx, word[Q]
   251 00000228 66891C25[5B000000]          mov word[P], bx
   252 00000230 66FF0425[56000000]          inc word[sizeEnveloppe]
   253                                  ;    cmp word[sizeEnveloppe], NUM_POINTS
   254                                  ;    jae STOP
   255 00000238 668B1C25[59000000]          mov bx, word[minpoint]
   256 00000240 66391C25[5B000000]          cmp word[P], bx
   257 00000248 0F850BFFFFFF                jne jarvis
   258                                  ;STOP:
   259                                  
   260 0000024E BB00000000              mov rbx, 0
   261                                  printenv:
   262 00000253 48BF-                       mov rdi, env
   262 00000255 [3C01000000000000] 
   263 0000025D 480FB7B41B-                 movzx rsi, word[enveloppe+rbx*2]
   263 00000262 [48000000]         
   264 00000266 B800000000                  mov rax, 0
   265 0000026B E8(00000000)                call printf
   266                                  
   267 00000270 48FFC3                      inc rbx
   268 00000273 663B1C25[56000000]          cmp bx, word[sizeEnveloppe]
   269 0000027B 72D6                        jb printenv    
   270                                      
   271                                  ;fenetre dessin   
   272 0000027D 4831FF                  xor     rdi,rdi
   273 00000280 E8(00000000)            call    XOpenDisplay	; Création de display
   274 00000285 48890425[00000000]      mov     qword[display_name],rax	; rax=nom du display
   275                                  
   276                                  ; display_name structure
   277                                  ; screen = DefaultScreen(display_name);
   278 0000028D 488B0425[00000000]      mov     rax,qword[display_name]
   279 00000295 8B80E0000000            mov     eax,dword[rax+0xe0]
   280 0000029B 890425[08000000]        mov     dword[screen],eax
   281                                  
   282 000002A2 488B3C25[00000000]      mov rdi,qword[display_name]
   283 000002AA 8B3425[08000000]        mov esi,dword[screen]
   284 000002B1 E8(00000000)            call XRootWindow
   285 000002B6 4889C3                  mov rbx,rax
   286                                  
   287 000002B9 488B3C25[00000000]      mov rdi,qword[display_name]
   288 000002C1 4889DE                  mov rsi,rbx
   289 000002C4 BA0A000000              mov rdx,10
   290 000002C9 B90A000000              mov rcx,10
   291 000002CE 41B890010000            mov r8,400	; largeur
   292 000002D4 41B990010000            mov r9,400	; hauteur
   293 000002DA 68FFFFFF00              push 0xFFFFFF	; background  0xRRGGBB
   294 000002DF 6800FF0000              push 0x00FF00
   295 000002E4 6A01                    push 1
   296 000002E6 E8(00000000)            call XCreateSimpleWindow
   297 000002EB 48890425[1C000000]      mov qword[window],rax
   298                                  
   299 000002F3 488B3C25[00000000]      mov rdi,qword[display_name]
   300 000002FB 488B3425[1C000000]      mov rsi,qword[window]
   301 00000303 BA05000200              mov rdx,131077 ;131072
   302 00000308 E8(00000000)            call XSelectInput
   303                                  
   304 0000030D 488B3C25[00000000]      mov rdi,qword[display_name]
   305 00000315 488B3425[1C000000]      mov rsi,qword[window]
   306 0000031D E8(00000000)            call XMapWindow
   307                                  
   308 00000322 488B3425[1C000000]      mov rsi,qword[window]
   309 0000032A BA00000000              mov rdx,0
   310 0000032F B900000000              mov rcx,0
   311 00000334 E8(00000000)            call XCreateGC
   312 00000339 48890425[24000000]      mov qword[gc],rax
   313                                  
   314 00000341 488B3C25[00000000]      mov rdi,qword[display_name]
   315 00000349 488B3425[24000000]      mov rsi,qword[gc]
   316 00000351 BA00000000              mov rdx,0x000000	; Couleur du crayon
   317 00000356 E8(00000000)            call XSetForeground
   318                                  
   319                                  boucle: ; boucle de gestion des évènements
   320 0000035B 488B3C25[00000000]      mov rdi,qword[display_name]
   321 00000363 48BE-                   mov rsi,event
   321 00000365 [0000000000000000] 
   322 0000036D E8(00000000)            call XNextEvent
   323                                  
   324 00000372 833C25[00000000]16      cmp dword[event],ConfigureNotify	; à l'apparition de la fenêtre
   325 0000037A 7410                    je dessin			; on saute au label 'dessin'
   326                                  
   327 0000037C 833C25[00000000]02      cmp dword[event],KeyPress        ; Si on appuie sur une touche
   328 00000384 0F84EA020000            je closeDisplay		        ; on saute au label 'closeDisplay' qui ferme la fenêtre
   329 0000038A EBCF                    jmp boucle
   330                                      
   331                                  ;#########################################
   332                                  ;#        DEBUT DE LA ZONE DE DESSIN     #
   333                                  ;#########################################
   334                                  dessin:
   335                                  
   336                                      ; boucle dessin point
   337                                      
   338 0000038C BB00000000                  mov rbx, 0  
   339                                      draw_point_loop:
   340                                  
   341                                          ;couleur du point 1
   342 00000391 488B3C25[00000000]              mov rdi,qword[display_name]
   343 00000399 488B3425[24000000]              mov rsi,qword[gc]
   344 000003A1 BA00000000                      mov edx,0x000000	; Couleur noire
   345 000003A6 E8(00000000)                    call XSetForeground
   346                                          
   347                                          ; Dessin d'un point du point
   348 000003AB 488B3C25[00000000]              mov rdi,qword[display_name]
   349 000003B3 488B3425[1C000000]              mov rsi,qword[window]
   350 000003BB 488B1425[24000000]              mov rdx,qword[gc]	
   351 000003C3 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; coordonnée en x du point généré
   351 000003C8 [2C000000]         
   352 000003CC 83E903                          sub ecx,3		
   353 000003CF 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; coordonnée en y du point généré
   353 000003D4 [3A000000]         
   354 000003D8 4983E803                        sub r8,3
   355 000003DC 41B906000000                    mov r9,6
   356 000003E2 B8005A0000                      mov rax,23040
   357 000003E7 50                              push rax
   358 000003E8 6A00                            push 0
   359 000003EA 4151                            push r9
   360 000003EC E8(00000000)                    call XFillArc
   361                                  
   362                                          ;++loopcounter
   363 000003F1 48FFC3                          inc rbx
   364                                          
   365                                          ;check if end loop
   366 000003F4 4883FB07                        cmp rbx, NUM_POINTS
   367 000003F8 7297                            jb draw_point_loop
   368                                          
   369                                          
   370                                      ; boucle dessin ligne
   371                                      
   372 000003FA BB00000000                  mov rbx, 0 
   373 000003FF B800000000                  mov rax, 0 
   374                                      draw_line_loop:
   375                                  
   376                                          ;couleur de la ligne 1
   377 00000404 488B3C25[00000000]              mov rdi,qword[display_name]
   378 0000040C 488B3425[24000000]              mov rsi,qword[gc]
   379 00000414 BA00000000                      mov edx,0x000000	; Couleur du crayon ; noir
   380 00000419 E8(00000000)                    call XSetForeground
   381                                          
   382                                          ; coordonnées de la ligne 1 (noire)
   383 0000041E 0FB7841B[2C000000]              movzx eax, word [coordx+rbx*2]
   384 00000426 890425[C0000000]                mov dword[x1],eax
   385 0000042D B800000000                      mov eax, 0
   386                                          
   387 00000432 0FB7841B[3A000000]              movzx eax, word [coordy+rbx*2]
   388 0000043A 890425[C8000000]                mov dword[y1],eax
   389 00000441 B800000000                      mov eax, 0
   390                                          
   391 00000446 48FFC3                          inc rbx
   392                                             
   393 00000449 4883FB07                        cmp rbx , NUM_POINTS
   394 0000044D 746D                            je set_draw_last_point
   395                                          
   396 0000044F 0FB7841B[2C000000]              movzx eax, word [coordx+rbx*2]
   397 00000457 890425[C4000000]                mov dword[x2], eax
   398 0000045E B800000000                      mov eax, 0
   399                                          
   400 00000463 0FB7841B[3A000000]              movzx eax, word [coordy+rbx*2]
   401 0000046B 890425[CC000000]                mov dword[y2], eax
   402 00000472 B800000000                      mov eax, 0
   403                                          
   404                                          ; dessin de la ligne 1
   405 00000477 488B3C25[00000000]              mov rdi,qword[display_name]
   406 0000047F 488B3425[1C000000]              mov rsi,qword[window]
   407 00000487 488B1425[24000000]              mov rdx,qword[gc]
   408 0000048F 8B0C25[C0000000]                mov ecx,dword[x1]	; coordonnée source en x
   409 00000496 448B0425[C8000000]              mov r8d,dword[y1]	; coordonnée source en y
   410 0000049E 448B0C25[C4000000]              mov r9d,dword[x2]	; coordonnée destination en x
   411 000004A6 FF3425[CC000000]                push qword[y2]		; coordonnée destination en y
   412 000004AD E8(00000000)                    call XDrawLine
   413                                          
   414                                          ;check if end loop
   415 000004B2 4883FB07                        cmp rbx, NUM_POINTS
   416 000004B6 0F8248FFFFFF                    jb draw_line_loop
   417                                          
   418                                          set_draw_last_point:
   419 000004BC BB00000000                          mov rbx, 0
   420 000004C1 0FB7841B[2C000000]                  movzx eax, word [coordx+rbx*2]
   421 000004C9 890425[C4000000]                    mov dword[x2], eax
   422 000004D0 B800000000                          mov eax, 0
   423                                              
   424 000004D5 0FB7841B[3A000000]                  movzx eax, word [coordy+rbx*2]
   425 000004DD 890425[CC000000]                    mov dword[y2], eax
   426 000004E4 B800000000                          mov eax, 0
   427                                              
   428                                              ; dessin de la ligne 1
   429 000004E9 488B3C25[00000000]                  mov rdi,qword[display_name]
   430 000004F1 488B3425[1C000000]                  mov rsi,qword[window]
   431 000004F9 488B1425[24000000]                  mov rdx,qword[gc]
   432 00000501 8B0C25[C0000000]                    mov ecx,dword[x1]	; coordonnée source en x
   433 00000508 448B0425[C8000000]                  mov r8d,dword[y1]	; coordonnée source en y
   434 00000510 448B0C25[C4000000]                  mov r9d,dword[x2]	; coordonnée destination en x
   435 00000518 FF3425[CC000000]                    push qword[y2]	; coordonnée destination en y
   436 0000051F E8(00000000)                        call XDrawLine
   437                                              ;jmp flush
   438                                          
   439                                  color_point_left:
   440                                          ;mov rbx, (le point en question)
   441 00000524 480FB71C25-                     movzx rbx, word[minpoint]
   441 00000529 [59000000]         
   442                                          ;couleur du point 1
   443 0000052D 488B3C25[00000000]              mov rdi,qword[display_name]
   444 00000535 488B3425[24000000]              mov rsi,qword[gc]
   445 0000053D BAFF000000                      mov edx,0x0000FF	; Couleur bleu
   446 00000542 E8(00000000)                    call XSetForeground
   447                                          
   448                                          ; Dessin du point
   449 00000547 488B3C25[00000000]              mov rdi,qword[display_name]
   450 0000054F 488B3425[1C000000]              mov rsi,qword[window]
   451 00000557 488B1425[24000000]              mov rdx,qword[gc]	
   452 0000055F 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   452 00000564 [2C000000]         
   453 00000568 83E903                          sub ecx,3		
   454 0000056B 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   454 00000570 [3A000000]         
   455 00000574 4983E803                        sub r8,3
   456 00000578 41B906000000                    mov r9,6
   457 0000057E B8005A0000                      mov rax,23040
   458 00000583 50                              push rax
   459 00000584 6A00                            push 0
   460 00000586 4151                            push r9
   461 00000588 E8(00000000)                    call XFillArc
   462                                          ;jmp flush    
   463                                          
   464                                  color_point_in:
   465                                          ;mov rbx, (le point en question)
   466 0000058D BB02000000                      mov rbx, 2
   467                                          ;couleur du point 1
   468 00000592 488B3C25[00000000]              mov rdi,qword[display_name]
   469 0000059A 488B3425[24000000]              mov rsi,qword[gc]
   470 000005A2 BA00FF0000                      mov edx,0x00FF00	; Couleur vert
   471 000005A7 E8(00000000)                    call XSetForeground
   472                                          
   473                                          ; Dessin du point
   474 000005AC 488B3C25[00000000]              mov rdi,qword[display_name]
   475 000005B4 488B3425[1C000000]              mov rsi,qword[window]
   476 000005BC 488B1425[24000000]              mov rdx,qword[gc]	
   477 000005C4 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   477 000005C9 [2C000000]         
   478 000005CD 83E903                          sub ecx,3		
   479 000005D0 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   479 000005D5 [3A000000]         
   480 000005D9 4983E803                        sub r8,3
   481 000005DD 41B906000000                    mov r9,6
   482 000005E3 B8005A0000                      mov rax,23040
   483 000005E8 50                              push rax
   484 000005E9 6A00                            push 0
   485 000005EB 4151                            push r9
   486 000005ED E8(00000000)                    call XFillArc
   487                                          ;jmp flush
   488                                          
   489                                  color_point_out:
   490                                          ;mov rbx, (le point en question)
   491 000005F2 BB01000000                      mov rbx, 1
   492                                          ;couleur du point 1
   493 000005F7 488B3C25[00000000]              mov rdi,qword[display_name]
   494 000005FF 488B3425[24000000]              mov rsi,qword[gc]
   495 00000607 BA0000FF00                      mov edx,0xFF0000	; Couleur rouge
   496 0000060C E8(00000000)                    call XSetForeground
   497                                          
   498                                          ; Dessin du point
   499 00000611 488B3C25[00000000]              mov rdi,qword[display_name]
   500 00000619 488B3425[1C000000]              mov rsi,qword[window]
   501 00000621 488B1425[24000000]              mov rdx,qword[gc]	
   502 00000629 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   502 0000062E [2C000000]         
   503 00000632 83E903                          sub ecx,3		
   504 00000635 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   504 0000063A [3A000000]         
   505 0000063E 4983E803                        sub r8,3
   506 00000642 41B906000000                    mov r9,6
   507 00000648 B8005A0000                      mov rax,23040
   508 0000064D 50                              push rax
   509 0000064E 6A00                            push 0
   510 00000650 4151                            push r9
   511 00000652 E8(00000000)                    call XFillArc
   512 00000657 EB02                            jmp flush
   513                                  ; ############################
   514                                  ; # FIN DE LA ZONE DE DESSIN #
   515                                  ; ############################
   516 00000659 EB00                    jmp flush
   517                                  
   518                                  flush:
   519 0000065B 488B3C25[00000000]          mov rdi,qword[display_name]
   520 00000663 E8(00000000)                call XFlush
   521 00000668 E9EEFCFFFF                  jmp boucle
   522 0000066D B822000000                  mov rax,34
   523 00000672 0F05                        syscall
   524                                  
   525                                  closeDisplay:
   526 00000674 488B0425[00000000]          mov     rax,qword[display_name]
   527 0000067C 4889CF                      mov     rdi,rcx
   528 0000067F E8(00000000)                call    XCloseDisplay
   529 00000684 4831FF                      xor	    rdi,rdi
   530 00000687 E8(00000000)                call    exit	
   531                                  
   532                                  ; Pour fermer le programme proprement :
   533 0000068C B83C000000              mov    rax, 60         
   534 00000691 BF00000000              mov    rdi, 0
   535 00000696 0F05                    syscall
   536                                  
   537 00000698 C3                      ret
