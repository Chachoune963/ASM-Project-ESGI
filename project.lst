     1                                  ; external functions from X11 library
     2                                  extern XOpenDisplay
     3                                  extern XDisplayName
     4                                  extern XCloseDisplay
     5                                  extern XCreateSimpleWindow
     6                                  extern XMapWindow
     7                                  extern XRootWindow
     8                                  extern XSelectInput
     9                                  extern XFlush
    10                                  extern XCreateGC
    11                                  extern XSetForeground
    12                                  extern XDrawLine
    13                                  extern XDrawPoint
    14                                  extern XFillArc
    15                                  extern XNextEvent
    16                                  
    17                                  ; external functions from stdio library (ld-linux-x86-64.so.2)    
    18                                  extern printf
    19                                  extern exit
    20                                  
    21                                  %define	StructureNotifyMask	131072
    22                                  %define KeyPressMask		1
    23                                  %define ButtonPressMask		4
    24                                  %define MapNotify		19
    25                                  %define KeyPress		2
    26                                  %define ButtonPress		4
    27                                  %define Expose			12
    28                                  %define ConfigureNotify		22
    29                                  %define CreateNotify 16
    30                                  %define QWORD	8
    31                                  %define DWORD	4
    32                                  %define WORD	2
    33                                  %define BYTE	1
    34                                  
    35                                  global orientation
    36                                  orientation:
    37                                      ; Coord de P dans di et si
    38                                      ; Coord de I dans dx et cx
    39                                      ; Coord de Q dans r8w et r9w
    40                                      
    41                                      ; cx sera bientôt modifié mais on doit l'utiliser 2 fois
    42                                      ; Donc on le sauvegarde
    43 00000000 6651                        push cx
    44 00000002 6629F1                      sub cx, si
    45 00000005 664129D0                    sub r8w, dx
    46                                      
    47 00000009 66410FAFC8                  imul cx, r8w
    48                                      
    49                                      ; Nous n'utiliserons plus si
    50                                      ; Donc nous restaurons la valeur de cx dans si
    51 0000000E 665E                        pop si
    52 00000010 6629FA                      sub dx, di
    53 00000013 664129F1                    sub r9w, si
    54                                      
    55 00000017 66410FAFD1                  imul dx, r9w
    56                                      
    57 0000001C 6629D1                      sub cx, dx
    58                                      
    59 0000001F 6683F900                    cmp cx, 0
    60 00000023 7C07                        jl clockwise
    61                                      
    62 00000025 B801000000                  mov eax, 1
    63 0000002A EB05                        jmp endori
    64                                      
    65                                      clockwise:
    66 0000002C B800000000                  mov eax, 0
    67                                      
    68                                      endori:
    69 00000031 C3                      ret
    70                                  
    71                                  global main
    72                                  
    73                                  %DEFINE NUM_POINTS 40
    74                                  %DEFINE MAX_X 255
    75                                  %DEFINE MAX_Y 255
    76                                  
    77                                  section .data
    78 00000000 0000000000000000-       event:		times	24 dq 0
    78 00000000 <rep 18h>          
    79                                  
    80 000000C0 00000000                x1:	dd	0
    81 000000C4 00000000                x2:	dd	0
    82 000000C8 00000000                y1:	dd	0
    83 000000CC 00000000                y2:	dd	0
    84                                  
    85 000000D0 25640A00                fmt_printf: db "%d", 10, 0
    86 000000D4 76733A2025640A00        fmt_index: db "vs: %d", 10, 0
    87 000000DC 4D696E696D756D3A20-     fmt_min: db "Minimum: %d", 10, 0
    87 000000E5 25640A00           
    88                                  
    89 000000E9 546573740A00            test: db "Test", 10, 0
    90 000000EF 78203A2025640A00        printx: db "x : %d", 10, 0
    91 000000F7 79203A2025640A00        printy: db "y : %d", 10, 0
    92 000000FF 4F6E2074657374206C-     jpp: db "On test le point: %d...", 10, 0
    92 00000108 6520706F696E743A20-
    92 00000111 25642E2E2E0A00     
    93 00000118 417520505620646520-     jenaismarre: db "Au PV de %d...", 10, 0
    93 00000121 25642E2E2E0A00     
    94 00000128 446570756973206C65-     tuezmoi: db "Depuis le point %d", 10, 0
    94 00000131 20706F696E74202564-
    94 0000013A 0A00               
    95 0000013C 456E76656C6F707065-     env: db "Enveloppe: %d", 10, 0
    95 00000145 3A2025640A00       
    96 0000014B 436F65663A2025640A-     coef: db "Coef: %d", 10, 0
    96 00000154 00                 
    97 00000155 526573756C7461743A-     resultat: db "Resultat: %d", 10, 0
    97 0000015E 2025640A00         
    98                                  ;coordx: dw 10, 102, 102, 108, 19
    99                                  ;coordy: dw 171, 3, 182, 103, 25
   100                                  
   101                                  section .bss
   102 00000000 ????????????????        display_name:	resq	1
   103 00000008 ????????                screen:		resd	1
   104 0000000C ????????                depth:         	resd	1
   105 00000010 ????????                connection:    	resd	1
   106 00000014 ????????                width:         	resd	1
   107 00000018 ????????                height:        	resd	1
   108 0000001C ????????????????        window:		resq	1
   109 00000024 ????????????????        gc:		resq	1
   110                                  
   111 0000002C <res 50h>               coordx: resw NUM_POINTS
   112 0000007C <res 50h>               coordy: resw NUM_POINTS
   113 000000CC <res 50h>               enveloppe: resw NUM_POINTS
   114 0000011C ??                      sizeEnveloppe: resb 1
   115 0000011D ????                    randnum: resw 1
   116 0000011F ????                    minpoint: resw 1
   117                                  
   118 00000121 ????                    P: resw 1
   119 00000123 ????                    Q: resw 1
   120 00000125 ????                    I: resw 1
   121                                  
   122 00000127 ????                    lastPointX: resw 1
   123 00000129 ????                    lastPointY: resw 1
   124 0000012B ??                      isInside: resb 1
   125 0000012C ????                    checkIndex: resw 1
   126                                  
   127                                  section .text
   128                                  
   129                                  main:
   130                                  ;Génération des points du programme
   131 00000032 BB00000000              mov rbx, 0
   132                                  populatex:
   133 00000037 660FC7F0                    rdrand ax
   134 0000003B 66890425[1D010000]          mov [randnum], ax
   135                                      modx:
   136 00000043 66812C25[1D010000]-             sub word[randnum], MAX_X
   136 0000004B FF00               
   137 0000004D 66813C25[1D010000]-             cmp word[randnum], MAX_X
   137 00000055 FF00               
   138 00000057 73EA                            jae modx
   139 00000059 668B0425[1D010000]          mov ax, word[randnum]
   140 00000061 6689841B[2C000000]          mov word[coordx+rbx*2], ax
   141                                      
   142 00000069 48FFC3                      inc rbx
   143 0000006C 4883FB28                    cmp rbx, NUM_POINTS
   144 00000070 72C5                        jb populatex
   145                                  
   146 00000072 BB00000000              mov rbx, 0
   147                                  populatey:
   148 00000077 F9                          stc
   149                                      checkcf:
   150 00000078 660FC7F0                        rdrand ax
   151 0000007C 73FA                        jnc checkcf
   152 0000007E 66890425[1D010000]          mov word[randnum], ax
   153                                      mody:
   154 00000086 66812C25[1D010000]-             sub word[randnum], MAX_Y
   154 0000008E FF00               
   155 00000090 66813C25[1D010000]-             cmp word[randnum], MAX_Y
   155 00000098 FF00               
   156 0000009A 73EA                            jae mody
   157 0000009C 668B0425[1D010000]          mov ax, word[randnum]
   158 000000A4 6689841B[7C000000]          mov word[coordy+rbx*2], ax
   159                                  
   160 000000AC 48FFC3                      inc rbx
   161 000000AF 4883FB28                    cmp rbx, NUM_POINTS
   162 000000B3 72C2                        jb populatey
   163                                      
   164 000000B5 BB00000000              mov rbx, 0
   165                                  printloop:
   166 000000BA 48BF-                       mov rdi, printx
   166 000000BC [EF00000000000000] 
   167 000000C4 480FB7B41B-                 movzx rsi, word[coordx+rbx*2]
   167 000000C9 [2C000000]         
   168 000000CD B800000000                  mov rax, 0
   169 000000D2 E8(00000000)                call printf
   170                                  
   171 000000D7 48BF-                       mov rdi, printy
   171 000000D9 [F700000000000000] 
   172 000000E1 480FB7B41B-                 movzx rsi, word[coordy+rbx*2]
   172 000000E6 [7C000000]         
   173 000000EA B800000000                  mov rax, 0
   174 000000EF E8(00000000)                call printf
   175                                      
   176 000000F4 48FFC3                      inc rbx
   177 000000F7 4883FB28                    cmp rbx, NUM_POINTS
   178 000000FB 72BD                        jb printloop
   179                                  
   180                                  ; Trouver le point le plus à gauche
   181 000000FD BB00000000              mov rbx, 0
   182 00000102 66891C25[1F010000]      mov word[minpoint], bx
   183 0000010A 48FFC3                  inc rbx
   184                                  minAlgo:
   185                                      ; On récupère le point minimum actuel
   186 0000010D 480FB70C25-                 movzx rcx, word[minpoint]
   186 00000112 [1F010000]         
   187 00000116 480FB78409-                 movzx rax, word[coordx+rcx*2]
   187 0000011B [2C000000]         
   188                                      
   189                                      ; On le compare au point parcouru actuel
   190 0000011F 663B841B[2C000000]          cmp ax, word[coordx+rbx*2]
   191 00000127 760B                        jbe lower
   192                                              
   193                                      ; Si minpoint > point actuel, on mets point actuel dans minpoint
   194 00000129 4889D8                      mov rax, rbx
   195 0000012C 66890425[1F010000]          mov word[minpoint], ax
   196                                  
   197                                      lower:
   198 00000134 48FFC3                      inc rbx
   199 00000137 4883FB28                    cmp rbx, NUM_POINTS
   200 0000013B 72D0                        jb minAlgo
   201                                      
   202                                  ; Une fois cette étape fini, nous connaissons le point le plus à gauche.
   203                                  ; Marche de Jarvis
   204                                  ; rax = Prochain point (P)
   205                                  ; rbx = Index actuel de enveloppe (Pas d'équivalent, à ne pas utiliser pr l'instant)
   206                                  ; rcx = Prochain candidat de P (Q)
   207 0000013D 4831C0                  xor rax, rax
   208 00000140 668B0425[1F010000]      mov ax, word[minpoint]
   209 00000148 66890425[21010000]      mov word[P], ax
   210 00000150 66C70425[1C010000]-     mov word[sizeEnveloppe], 0
   210 00000158 0000               
   211                                  jarvis:
   212 0000015A 668B0425[21010000]          mov ax, word[P]
   213 00000162 4831DB                      xor rbx, rbx
   214 00000165 480FB71C25-                 movzx rbx, word[sizeEnveloppe]
   214 0000016A [1C010000]         
   215 0000016E 6689841B[CC000000]          mov word[enveloppe+rbx*2], ax
   216                                      
   217 00000176 66890425[23010000]          mov word[Q], ax
   218 0000017E 66FF0425[23010000]          inc word[Q]
   219 00000186 66833C25[23010000]-         cmp word[Q], NUM_POINTS
   219 0000018E 28                 
   220 0000018F 7209                        jb nofix
   221                                      
   222 00000191 66832C25[23010000]-         sub word[Q], NUM_POINTS
   222 00000199 28                 
   223                                      
   224                                      nofix:
   225 0000019A 66C70425[25010000]-         mov word[I], 0
   225 000001A2 0000               
   226                                      parcoursListe:
   227 000001A4 668B1C25[21010000]              mov bx, word[P]
   228 000001AC 66391C25[25010000]              cmp word[I], bx
   229 000001B4 746D                            je nocandid
   230                                          ; Coord de P dans di et si
   231 000001B6 480FB70425-                     movzx rax, word[P]
   231 000001BB [21010000]         
   232 000001BF 668BBC00[2C000000]              mov di, word[coordx+rax*2]
   233 000001C7 668BB400[7C000000]              mov si, word[coordy+rax*2]
   234                                          
   235                                          ; Coord de I dans dx et cx
   236 000001CF 480FB70425-                     movzx rax, word[I]
   236 000001D4 [25010000]         
   237 000001D8 668B9400[2C000000]              mov dx, word[coordx+rax*2]
   238 000001E0 668B8C00[7C000000]              mov cx, word[coordy+rax*2]
   239                                          
   240                                          ; Coord de Q dans r8w et r9w
   241 000001E8 480FB70425-                     movzx rax, word[Q]
   241 000001ED [23010000]         
   242 000001F1 66448B8400-                     mov r8w, word[coordx+rax*2]
   242 000001F6 [2C000000]         
   243 000001FA 66448B8C00-                     mov r9w, word[coordy+rax*2]
   243 000001FF [7C000000]         
   244 00000203 B800000000                      mov rax, 0
   245 00000208 E8F3FDFFFF                      call orientation
   246                                          
   247 0000020D 83F800                          cmp eax, 0
   248 00000210 7E11                            jle nocandid
   249                                          
   250 00000212 480FB71C25-                     movzx rbx, word[I]
   250 00000217 [25010000]         
   251 0000021B 66891C25[23010000]              mov word[Q], bx
   252                                          
   253                                          nocandid:
   254                                          
   255 00000223 66FF0425[25010000]              inc word[I]
   256 0000022B 66833C25[25010000]-             cmp word[I], NUM_POINTS
   256 00000233 28                 
   257 00000234 0F826AFFFFFF                    jb parcoursListe    
   258 0000023A 668B1C25[23010000]          mov bx, word[Q]
   259 00000242 66891C25[21010000]          mov word[P], bx
   260 0000024A 66FF0425[1C010000]          inc word[sizeEnveloppe]
   261                                  
   262 00000252 668B1C25[1F010000]          mov bx, word[minpoint]
   263 0000025A 66391C25[21010000]          cmp word[P], bx
   264 00000262 0F85F2FEFFFF                jne jarvis
   265                                  
   266                                  
   267 00000268 BB00000000              mov rbx, 0
   268                                  printenv:
   269 0000026D 48BF-                       mov rdi, env
   269 0000026F [3C01000000000000] 
   270 00000277 480FB7B41B-                 movzx rsi, word[enveloppe+rbx*2]
   270 0000027C [CC000000]         
   271 00000280 B800000000                  mov rax, 0
   272 00000285 E8(00000000)                call printf
   273                                  
   274 0000028A 48FFC3                      inc rbx
   275 0000028D 663B1C25[1C010000]          cmp bx, word[sizeEnveloppe]
   276 00000295 72D6                        jb printenv  
   277                                      
   278 00000297 660FC7F0                rdrand ax
   279 0000029B 66890425[27010000]      mov word[lastPointX], ax
   280                                  lastmodx:
   281 000002A3 66812C25[27010000]-         sub word[lastPointX], MAX_X
   281 000002AB FF00               
   282 000002AD 66813C25[27010000]-         cmp word[lastPointX], MAX_X
   282 000002B5 FF00               
   283 000002B7 73EA                        jae lastmodx
   284                                      
   285 000002B9 660FC7F0                rdrand ax
   286 000002BD 66890425[29010000]      mov word[lastPointY], ax
   287                                  lastmody:
   288 000002C5 66812C25[29010000]-         sub word[lastPointY], MAX_Y
   288 000002CD FF00               
   289 000002CF 66813C25[29010000]-         cmp word[lastPointY], MAX_Y
   289 000002D7 FF00               
   290 000002D9 73EA                        jae lastmody
   291                                      
   292 000002DB 66C70425[2C010000]-     mov word[checkIndex], 0
   292 000002E3 0000               
   293 000002E5 66C70425[2B010000]-     mov word[isInside], 1
   293 000002ED 0100               
   294                                  checkInside:
   295 000002EF 480FB70425-                 movzx rax, word[checkIndex]
   295 000002F4 [2C010000]         
   296 000002F8 668B9C00[CC000000]          mov bx, word[enveloppe+rax*2]
   297 00000300 66891C25[21010000]          mov word[P], bx
   298 00000308 66FFC3                      inc bx
   299 0000030B 66391C25[1C010000]          cmp word[sizeEnveloppe], bx
   300 00000313 7512                        jne nolooped
   301                                      
   302 00000315 668B1C25[CC000000]          mov bx, word[enveloppe]
   303 0000031D 66891C25[25010000]          mov word[I], bx
   304 00000325 EB10                        jmp endlooped
   305                                      
   306                                      nolooped:
   307 00000327 668B9C00[CE000000]          mov bx, word[enveloppe+(rax+1)*2]
   308 0000032F 66891C25[25010000]          mov word[I], bx
   309                                      
   310                                      endlooped:
   311                                      ; Coord de P dans di et si
   312 00000337 480FB70425-                 movzx rax, word[P]
   312 0000033C [21010000]         
   313 00000340 668BBC00[2C000000]          mov di, word[coordx+rax*2]
   314 00000348 668BB400[7C000000]          mov si, word[coordy+rax*2]
   315                                      
   316                                      ; Coord de I dans dx et cx
   317 00000350 480FB70425-                 movzx rax, word[I]
   317 00000355 [25010000]         
   318 00000359 668B9400[2C000000]          mov dx, word[coordx+rax*2]
   319 00000361 668B8C00[7C000000]          mov cx, word[coordy+rax*2]
   320                                      
   321                                      ; Coord de lastPoint dans r8w et r9w
   322 00000369 66448B0425-                 mov r8w, word[lastPointX]
   322 0000036E [27010000]         
   323 00000372 66448B0C25-                 mov r9w, word[lastPointY]
   323 00000377 [29010000]         
   324 0000037B B800000000                  mov rax, 0
   325 00000380 E87BFCFFFF                  call orientation
   326                                      
   327 00000385 83F800                      cmp eax, 0
   328 00000388 7508                        jne nextCheck
   329                                      
   330 0000038A C60425[2B010000]00          mov byte[isInside], 0
   331                                      
   332                                      nextCheck:
   333 00000392 66FF0425[2C010000]          inc word[checkIndex]
   334 0000039A 480FB70425-                 movzx rax, word[sizeEnveloppe]
   334 0000039F [1C010000]         
   335 000003A3 66390425[2C010000]          cmp word[checkIndex], ax
   336 000003AB 0F823EFFFFFF                jb checkInside
   337                                  
   338 000003B1 48BF-                       mov rdi, printx
   338 000003B3 [EF00000000000000] 
   339 000003BB 480FB73425-                 movzx rsi, word[lastPointX]
   339 000003C0 [27010000]         
   340 000003C4 B800000000                  mov rax, 0
   341 000003C9 E8(00000000)                call printf
   342                                      
   343 000003CE 48BF-                       mov rdi, printy
   343 000003D0 [F700000000000000] 
   344 000003D8 480FB73425-                 movzx rsi, word[lastPointY]
   344 000003DD [29010000]         
   345 000003E1 B800000000                  mov rax, 0
   346 000003E6 E8(00000000)                call printf
   347                                      
   348 000003EB 48BF-                       mov rdi, resultat
   348 000003ED [5501000000000000] 
   349 000003F5 480FB63425-                 movzx rsi, byte[isInside]
   349 000003FA [2B010000]         
   350 000003FE B800000000                  mov rax, 0
   351 00000403 E8(00000000)                call printf
   352                                          
   353                                  ;fenetre dessin   
   354 00000408 4831FF                  xor     rdi,rdi
   355 0000040B E8(00000000)            call    XOpenDisplay	; Création de display
   356 00000410 48890425[00000000]      mov     qword[display_name],rax	; rax=nom du display
   357                                  
   358                                  ; display_name structure
   359                                  ; screen = DefaultScreen(display_name);
   360 00000418 488B0425[00000000]      mov     rax,qword[display_name]
   361 00000420 8B80E0000000            mov     eax,dword[rax+0xe0]
   362 00000426 890425[08000000]        mov     dword[screen],eax
   363                                  
   364 0000042D 488B3C25[00000000]      mov rdi,qword[display_name]
   365 00000435 8B3425[08000000]        mov esi,dword[screen]
   366 0000043C E8(00000000)            call XRootWindow
   367 00000441 4889C3                  mov rbx,rax
   368                                  
   369 00000444 488B3C25[00000000]      mov rdi,qword[display_name]
   370 0000044C 4889DE                  mov rsi,rbx
   371 0000044F BA0A000000              mov rdx,10
   372 00000454 B90A000000              mov rcx,10
   373 00000459 41B890010000            mov r8,400	; largeur
   374 0000045F 41B990010000            mov r9,400	; hauteur
   375 00000465 68FFFFFF00              push 0xFFFFFF	; background  0xRRGGBB
   376 0000046A 6800FF0000              push 0x00FF00
   377 0000046F 6A01                    push 1
   378 00000471 E8(00000000)            call XCreateSimpleWindow
   379 00000476 48890425[1C000000]      mov qword[window],rax
   380                                  
   381 0000047E 488B3C25[00000000]      mov rdi,qword[display_name]
   382 00000486 488B3425[1C000000]      mov rsi,qword[window]
   383 0000048E BA05000200              mov rdx,131077 ;131072
   384 00000493 E8(00000000)            call XSelectInput
   385                                  
   386 00000498 488B3C25[00000000]      mov rdi,qword[display_name]
   387 000004A0 488B3425[1C000000]      mov rsi,qword[window]
   388 000004A8 E8(00000000)            call XMapWindow
   389                                  
   390 000004AD 488B3425[1C000000]      mov rsi,qword[window]
   391 000004B5 BA00000000              mov rdx,0
   392 000004BA B900000000              mov rcx,0
   393 000004BF E8(00000000)            call XCreateGC
   394 000004C4 48890425[24000000]      mov qword[gc],rax
   395                                  
   396 000004CC 488B3C25[00000000]      mov rdi,qword[display_name]
   397 000004D4 488B3425[24000000]      mov rsi,qword[gc]
   398 000004DC BA00000000              mov rdx,0x000000	; Couleur du crayon
   399 000004E1 E8(00000000)            call XSetForeground
   400                                  
   401                                  boucle: ; boucle de gestion des évènements
   402 000004E6 488B3C25[00000000]      mov rdi,qword[display_name]
   403 000004EE 48BE-                   mov rsi,event
   403 000004F0 [0000000000000000] 
   404 000004F8 E8(00000000)            call XNextEvent
   405                                  
   406 000004FD 833C25[00000000]16      cmp dword[event],ConfigureNotify	; à l'apparition de la fenêtre
   407 00000505 7410                    je dessin			; on saute au label 'dessin'
   408                                  
   409 00000507 833C25[00000000]02      cmp dword[event],KeyPress        ; Si on appuie sur une touche
   410 0000050F 0F8489030000            je closeDisplay		        ; on saute au label 'closeDisplay' qui ferme la fenêtre
   411 00000515 EBCF                    jmp boucle
   412                                      
   413                                  ;#########################################
   414                                  ;#        DEBUT DE LA ZONE DE DESSIN     #
   415                                  ;#########################################
   416                                  dessin:
   417                                  
   418                                      ; boucle dessin point
   419                                      
   420 00000517 BB00000000                  mov rbx, 0  
   421                                      draw_point_loop:
   422                                  
   423                                          ;couleur du point 1
   424 0000051C 488B3C25[00000000]              mov rdi,qword[display_name]
   425 00000524 488B3425[24000000]              mov rsi,qword[gc]
   426 0000052C BA00000000                      mov edx,0x000000	; Couleur noire
   427 00000531 E8(00000000)                    call XSetForeground
   428                                          
   429                                          ; Dessin d'un point du point
   430 00000536 488B3C25[00000000]              mov rdi,qword[display_name]
   431 0000053E 488B3425[1C000000]              mov rsi,qword[window]
   432 00000546 488B1425[24000000]              mov rdx,qword[gc]	
   433 0000054E 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; coordonnée en x du point généré
   433 00000553 [2C000000]         
   434 00000557 83E903                          sub ecx,3		
   435 0000055A 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; coordonnée en y du point généré
   435 0000055F [7C000000]         
   436 00000563 4983E803                        sub r8,3
   437 00000567 41B906000000                    mov r9,6
   438 0000056D B8005A0000                      mov rax,23040
   439 00000572 50                              push rax
   440 00000573 6A00                            push 0
   441 00000575 4151                            push r9
   442 00000577 E8(00000000)                    call XFillArc
   443                                  
   444                                          ;++loopcounter
   445 0000057C 48FFC3                          inc rbx
   446                                          
   447                                          ;check if end loop
   448 0000057F 4883FB28                        cmp rbx, NUM_POINTS
   449 00000583 7297                            jb draw_point_loop
   450                                          
   451                                          
   452 00000585 48BF-                           mov rdi, printy
   452 00000587 [F700000000000000] 
   453 0000058F 480FB73425-                     movzx rsi, word[sizeEnveloppe]
   453 00000594 [1C010000]         
   454 00000598 B800000000                      mov rax, 0
   455 0000059D E8(00000000)                    call printf
   456                                      
   457                                      
   458                                      ; boucle dessin ligne
   459                                      
   460 000005A2 BB00000000                  mov rbx, 0 
   461 000005A7 B800000000                  mov rax, 0
   462                                  
   463                                      draw_line_loop:
   464                                  
   465                                          ;couleur de la ligne 1
   466 000005AC 488B3C25[00000000]              mov rdi,qword[display_name]
   467 000005B4 488B3425[24000000]              mov rsi,qword[gc]
   468 000005BC BA00000000                      mov edx,0x000000	; Couleur du crayon ; noir
   469 000005C1 E8(00000000)                    call XSetForeground
   470                                          
   471                                          ;###debug
   472 000005C6 56                              push rsi
   473                                          
   474 000005C7 48BF-                           mov rdi, printy
   474 000005C9 [F700000000000000] 
   475 000005D1 4889DE                          mov rsi, rbx
   476 000005D4 B800000000                      mov rax, 0
   477 000005D9 E8(00000000)                    call printf
   478                                          
   479 000005DE 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   479 000005E3 [CC000000]         
   480 000005E7 48BF-                           mov rdi, env
   480 000005E9 [3C01000000000000] 
   481 000005F1 4889CE                          mov rsi, rcx
   482 000005F4 B800000000                      mov rax, 0
   483 000005F9 E8(00000000)                    call printf
   484                                          
   485 000005FE 5E                              pop rsi
   486                                          ;;;;;;
   487                                          
   488                                          ;coordonnées de la ligne 1 (noire)
   489                                          
   490                                          ;Premier point
   491 000005FF 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   491 00000604 [CC000000]         
   492                                          
   493                                          ;x
   494 00000608 0FB78409[2C000000]              movzx eax, word [coordx+rcx*2]
   495 00000610 890425[C0000000]                mov dword[x1],eax
   496 00000617 B800000000                      mov eax, 0
   497                                  
   498                                          ;y
   499 0000061C 0FB78409[7C000000]              movzx eax, word [coordy+rcx*2]
   500 00000624 890425[C8000000]                mov dword[y1],eax
   501 0000062B B800000000                      mov eax, 0
   502                                          
   503                                          ;Second point
   504 00000630 48FFC3                          inc rbx
   505                                          
   506                                          ;if rcx = sizeEnveloppe, go back to 1rst point
   507 00000633 B900000000                      mov rcx, 0
   508 00000638 480FB70C25-                     movzx rcx, word[sizeEnveloppe]  
   508 0000063D [1C010000]         
   509 00000641 4839CB                          cmp rbx , rcx
   510 00000644 0F8483000000                    je set_draw_last_point
   511                                          
   512 0000064A 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   512 0000064F [CC000000]         
   513                                          
   514 00000653 0FB78409[2C000000]              movzx eax, word [coordx+rcx*2]
   515 0000065B 890425[C4000000]                mov dword[x2], eax
   516 00000662 B800000000                      mov eax, 0
   517                                          
   518 00000667 0FB78409[7C000000]              movzx eax, word [coordy+rcx*2]
   519 0000066F 890425[CC000000]                mov dword[y2], eax
   520 00000676 B800000000                      mov eax, 0
   521                                          
   522                                          ; dessin de la ligne 1
   523 0000067B 488B3C25[00000000]              mov rdi,qword[display_name]
   524 00000683 488B3425[1C000000]              mov rsi,qword[window]
   525 0000068B 488B1425[24000000]              mov rdx,qword[gc]
   526 00000693 8B0C25[C0000000]                mov ecx,dword[x1]	; coordonnée source en x
   527 0000069A 448B0425[C8000000]              mov r8d,dword[y1]	; coordonnée source en y
   528 000006A2 448B0C25[C4000000]              mov r9d,dword[x2]	; coordonnée destination en x
   529 000006AA FF3425[CC000000]                push qword[y2]		; coordonnée destination en y
   530 000006B1 E8(00000000)                    call XDrawLine
   531                                          
   532                                          ;check if end loop
   533 000006B6 B900000000                      mov rcx, 0
   534 000006BB 480FB70C25-                     movzx rcx, word[sizeEnveloppe]
   534 000006C0 [1C010000]         
   535 000006C4 4839CB                          cmp rbx , rcx
   536 000006C7 0F82DFFEFFFF                    jb draw_line_loop
   537                                          
   538                                          set_draw_last_point:    
   539 000006CD BB00000000                          mov rbx, 0
   540 000006D2 480FB78C1B-                         movzx rcx, word[enveloppe+rbx*2]
   540 000006D7 [CC000000]         
   541                                              
   542 000006DB 0FB78409[2C000000]                  movzx eax, word [coordx+rcx*2]
   543 000006E3 890425[C4000000]                    mov dword[x2], eax
   544 000006EA B800000000                          mov eax, 0
   545                                              
   546 000006EF 0FB78409[7C000000]                  movzx eax, word [coordy+rcx*2]
   547 000006F7 890425[CC000000]                    mov dword[y2], eax
   548 000006FE B800000000                          mov eax, 0
   549                                              
   550                                              ; dessin de la ligne 1
   551 00000703 488B3C25[00000000]                  mov rdi,qword[display_name]
   552 0000070B 488B3425[1C000000]                  mov rsi,qword[window]
   553 00000713 488B1425[24000000]                  mov rdx,qword[gc]
   554 0000071B 8B0C25[C0000000]                    mov ecx,dword[x1]	; coordonnée source en x
   555 00000722 448B0425[C8000000]                  mov r8d,dword[y1]	; coordonnée source en y
   556 0000072A 448B0C25[C4000000]                  mov r9d,dword[x2]	; coordonnée destination en x
   557 00000732 FF3425[CC000000]                    push qword[y2]	; coordonnée destination en y
   558 00000739 E8(00000000)                        call XDrawLine
   559                                              ;jmp flush
   560                                          
   561                                  color_point_left:
   562                                          ;mov rbx, (le point en question)
   563 0000073E 480FB71C25-                     movzx rbx, word[minpoint]
   563 00000743 [1F010000]         
   564                                          ;couleur du point 1
   565 00000747 488B3C25[00000000]              mov rdi,qword[display_name]
   566 0000074F 488B3425[24000000]              mov rsi,qword[gc]
   567 00000757 BAFF000000                      mov edx,0x0000FF	; Couleur bleu
   568 0000075C E8(00000000)                    call XSetForeground
   569                                          
   570                                          ; Dessin du point
   571 00000761 488B3C25[00000000]              mov rdi,qword[display_name]
   572 00000769 488B3425[1C000000]              mov rsi,qword[window]
   573 00000771 488B1425[24000000]              mov rdx,qword[gc]	
   574 00000779 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   574 0000077E [2C000000]         
   575 00000782 83E903                          sub ecx,3		
   576 00000785 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   576 0000078A [7C000000]         
   577 0000078E 4983E803                        sub r8,3
   578 00000792 41B906000000                    mov r9,6
   579 00000798 B8005A0000                      mov rax,23040
   580 0000079D 50                              push rax
   581 0000079E 6A00                            push 0
   582 000007A0 4151                            push r9
   583 000007A2 E8(00000000)                    call XFillArc
   584                                          ;jmp flush    
   585                                       
   586                                  ;
   587                                  
   588                                      
   589 000007A7 480FB63425-                 movzx rsi, byte[isInside]
   589 000007AC [2B010000]         
   590 000007B0 B800000000                  mov rax, 0  
   591 000007B5 4839C6                      cmp rsi ,rax
   592 000007B8 7462                        je color_point_out       
   593                                  ;              
   594                                  color_point_in:
   595                                          ;mov rbx, (le point en question)
   596                                          ;mov rbx, 2
   597                                          ;couleur du point 1
   598 000007BA 488B3C25[00000000]              mov rdi,qword[display_name]
   599 000007C2 488B3425[24000000]              mov rsi,qword[gc]
   600 000007CA BA00FF0000                      mov edx,0x00FF00	; Couleur vert
   601 000007CF E8(00000000)                    call XSetForeground
   602                                          
   603                                          ; Dessin du point
   604 000007D4 488B3C25[00000000]              mov rdi,qword[display_name]
   605 000007DC 488B3425[1C000000]              mov rsi,qword[window]
   606 000007E4 488B1425[24000000]              mov rdx,qword[gc]	
   607 000007EC 480FB70C25-                     movzx rcx, word[lastPointX] ; x
   607 000007F1 [27010000]         
   608 000007F5 83E903                          sub ecx,3		
   609 000007F8 4C0FB70425-                     movzx r8, word[lastPointY] ; y
   609 000007FD [29010000]         
   610 00000801 4983E803                        sub r8,3
   611 00000805 41B906000000                    mov r9,6
   612 0000080B B8005A0000                      mov rax,23040
   613 00000810 50                              push rax
   614 00000811 6A00                            push 0
   615 00000813 4151                            push r9
   616 00000815 E8(00000000)                    call XFillArc
   617 0000081A EB69                            jmp flush
   618                                          ;ret
   619                                          
   620                                  color_point_out:
   621                                          ;mov rbx, (le point en question)
   622 0000081C BB01000000                      mov rbx, 1
   623                                          ;couleur du point 1
   624 00000821 488B3C25[00000000]              mov rdi,qword[display_name]
   625 00000829 488B3425[24000000]              mov rsi,qword[gc]
   626 00000831 BA0000FF00                      mov edx,0xFF0000	; Couleur rouge
   627 00000836 E8(00000000)                    call XSetForeground
   628                                          
   629                                          ; Dessin du point
   630 0000083B 488B3C25[00000000]              mov rdi,qword[display_name]
   631 00000843 488B3425[1C000000]              mov rsi,qword[window]
   632 0000084B 488B1425[24000000]              mov rdx,qword[gc]	
   633 00000853 480FB70C25-                     movzx rcx, word[lastPointX] ; x
   633 00000858 [27010000]         
   634 0000085C 83E903                          sub ecx,3		
   635 0000085F 4C0FB70425-                     movzx r8, word[lastPointX] ; y
   635 00000864 [27010000]         
   636 00000868 4983E803                        sub r8,3
   637 0000086C 41B906000000                    mov r9,6
   638 00000872 B8005A0000                      mov rax,23040
   639 00000877 50                              push rax
   640 00000878 6A00                            push 0
   641 0000087A 4151                            push r9
   642 0000087C E8(00000000)                    call XFillArc
   643 00000881 EB02                            jmp flush
   644                                          ;ret
   645                                  ; ############################
   646                                  ; # FIN DE LA ZONE DE DESSIN #
   647                                  ; ############################
   648 00000883 EB00                    jmp flush
   649                                  
   650                                  flush:
   651 00000885 488B3C25[00000000]          mov rdi,qword[display_name]
   652 0000088D E8(00000000)                call XFlush
   653 00000892 E94FFCFFFF                  jmp boucle
   654 00000897 B822000000                  mov rax,34
   655 0000089C 0F05                        syscall
   656                                  
   657                                  closeDisplay:
   658 0000089E 488B0425[00000000]          mov     rax,qword[display_name]
   659 000008A6 4889CF                      mov     rdi,rcx
   660 000008A9 E8(00000000)                call    XCloseDisplay
   661 000008AE 4831FF                      xor	    rdi,rdi
   662 000008B1 E8(00000000)                call    exit	
   663                                  
   664                                  ; Pour fermer le programme proprement :
   665 000008B6 B83C000000              mov    rax, 60         
   666 000008BB BF00000000              mov    rdi, 0
   667 000008C0 0F05                    syscall
   668                                  
   669 000008C2 C3                      ret
