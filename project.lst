     1                                  ; external functions from X11 library
     2                                  extern XOpenDisplay
     3                                  extern XDisplayName
     4                                  extern XCloseDisplay
     5                                  extern XCreateSimpleWindow
     6                                  extern XMapWindow
     7                                  extern XRootWindow
     8                                  extern XSelectInput
     9                                  extern XFlush
    10                                  extern XCreateGC
    11                                  extern XSetForeground
    12                                  extern XDrawLine
    13                                  extern XDrawPoint
    14                                  extern XFillArc
    15                                  extern XNextEvent
    16                                  
    17                                  ; external functions from stdio library (ld-linux-x86-64.so.2)    
    18                                  extern printf
    19                                  extern exit
    20                                  
    21                                  %define	StructureNotifyMask	131072
    22                                  %define KeyPressMask		1
    23                                  %define ButtonPressMask		4
    24                                  %define MapNotify		19
    25                                  %define KeyPress		2
    26                                  %define ButtonPress		4
    27                                  %define Expose			12
    28                                  %define ConfigureNotify		22
    29                                  %define CreateNotify 16
    30                                  %define QWORD	8
    31                                  %define DWORD	4
    32                                  %define WORD	2
    33                                  %define BYTE	1
    34                                  
    35                                  global orientation
    36                                  orientation:
    37                                      ; Coord de P dans di et si
    38                                      ; Coord de I dans dx et cx
    39                                      ; Coord de Q dans r8w et r9w
    40                                      
    41                                      ; cx sera bientôt modifié mais on doit l'utiliser 2 fois
    42                                      ; Donc on le sauvegarde
    43 00000000 6651                        push cx
    44 00000002 6629F1                      sub cx, si
    45 00000005 664129D0                    sub r8w, dx
    46                                      
    47 00000009 66410FAFC8                  imul cx, r8w
    48                                      
    49                                      ; Nous n'utiliserons plus si
    50                                      ; Donc nous restaurons la valeur de cx dans si
    51 0000000E 665E                        pop si
    52 00000010 6629FA                      sub dx, di
    53 00000013 664129F1                    sub r9w, si
    54                                      
    55 00000017 66410FAFD1                  imul dx, r9w
    56                                      
    57 0000001C 6629D1                      sub cx, dx
    58                                      
    59 0000001F 6683F900                    cmp cx, 0
    60 00000023 7E07                        jle clockwise
    61                                      
    62 00000025 B801000000                  mov eax, 1
    63 0000002A EB05                        jmp endori
    64                                      
    65                                      clockwise:
    66 0000002C B800000000                  mov eax, 0
    67                                      
    68                                      endori:
    69 00000031 C3                      ret
    70                                  
    71                                  global main
    72                                  
    73                                  %DEFINE NUM_POINTS 40
    74                                  %DEFINE MAX_X 255
    75                                  %DEFINE MAX_Y 255
    76                                  
    77                                  section .data
    78 00000000 0000000000000000-       event:		times	24 dq 0
    78 00000000 <rep 18h>          
    79                                  
    80 000000C0 00000000                x1:	dd	0
    81 000000C4 00000000                x2:	dd	0
    82 000000C8 00000000                y1:	dd	0
    83 000000CC 00000000                y2:	dd	0
    84                                  
    85 000000D0 25640A00                fmt_printf: db "%d", 10, 0
    86 000000D4 76733A2025640A00        fmt_index: db "vs: %d", 10, 0
    87 000000DC 4D696E696D756D3A20-     fmt_min: db "Minimum: %d", 10, 0
    87 000000E5 25640A00           
    88                                  
    89 000000E9 546573740A00            test: db "Test", 10, 0
    90 000000EF 78203A2025640A00        printx: db "x : %d", 10, 0
    91 000000F7 79203A2025640A00        printy: db "y : %d", 10, 0
    92 000000FF 4F6E2074657374206C-     jpp: db "On test le point: %d...", 10, 0
    92 00000108 6520706F696E743A20-
    92 00000111 25642E2E2E0A00     
    93 00000118 417520505620646520-     jenaismarre: db "Au PV de %d...", 10, 0
    93 00000121 25642E2E2E0A00     
    94 00000128 446570756973206C65-     tuezmoi: db "Depuis le point %d", 10, 0
    94 00000131 20706F696E74202564-
    94 0000013A 0A00               
    95 0000013C 456E76656C6F707065-     env: db "Enveloppe: %d", 10, 0
    95 00000145 3A2025640A00       
    96 0000014B 436F65663A2025640A-     coef: db "Coef: %d", 10, 0
    96 00000154 00                 
    97 00000155 526573756C7461743A-     resultat: db "Resultat: %d", 10, 0
    97 0000015E 2025640A00         
    98                                  
    99                                  section .bss
   100 00000000 ????????????????        display_name:	resq	1
   101 00000008 ????????                screen:		resd	1
   102 0000000C ????????                depth:         	resd	1
   103 00000010 ????????                connection:    	resd	1
   104 00000014 ????????                width:         	resd	1
   105 00000018 ????????                height:        	resd	1
   106 0000001C ????????????????        window:		resq	1
   107 00000024 ????????????????        gc:		resq	1
   108                                  
   109 0000002C <res 50h>               coordx: resw NUM_POINTS
   110 0000007C <res 50h>               coordy: resw NUM_POINTS
   111 000000CC <res 50h>               enveloppe: resw NUM_POINTS
   112 0000011C ??                      sizeEnveloppe: resb 1
   113 0000011D ????                    randnum: resw 1
   114 0000011F ????                    minpoint: resw 1
   115                                  
   116 00000121 ????                    P: resw 1
   117 00000123 ????                    Q: resw 1
   118 00000125 ????                    I: resw 1
   119                                  
   120                                  section .text
   121                                  
   122                                  main:
   123                                  ; Génération des points du programme
   124 00000032 BB00000000              mov rbx, 0
   125                                  populatex:
   126 00000037 660FC7F0                    rdrand ax
   127 0000003B 66890425[1D010000]          mov [randnum], ax
   128                                      modx:
   129 00000043 66812C25[1D010000]-             sub word[randnum], MAX_X
   129 0000004B FF00               
   130 0000004D 66813C25[1D010000]-             cmp word[randnum], MAX_X
   130 00000055 FF00               
   131 00000057 73EA                            jae modx
   132 00000059 668B0425[1D010000]          mov ax, word[randnum]
   133 00000061 6689841B[2C000000]          mov word[coordx+rbx*2], ax
   134                                      
   135 00000069 48FFC3                      inc rbx
   136 0000006C 4883FB28                    cmp rbx, NUM_POINTS
   137 00000070 72C5                        jb populatex
   138                                  
   139 00000072 BB00000000              mov rbx, 0
   140                                  populatey:
   141 00000077 F9                          stc
   142                                      checkcf:
   143 00000078 660FC7F0                        rdrand ax
   144 0000007C 73FA                        jnc checkcf
   145 0000007E 66890425[1D010000]          mov word[randnum], ax
   146                                      mody:
   147 00000086 66812C25[1D010000]-             sub word[randnum], MAX_Y
   147 0000008E FF00               
   148 00000090 66813C25[1D010000]-             cmp word[randnum], MAX_Y
   148 00000098 FF00               
   149 0000009A 73EA                            jae mody
   150 0000009C 668B0425[1D010000]          mov ax, word[randnum]
   151 000000A4 6689841B[7C000000]          mov word[coordy+rbx*2], ax
   152                                  
   153 000000AC 48FFC3                      inc rbx
   154 000000AF 4883FB28                    cmp rbx, NUM_POINTS
   155 000000B3 72C2                        jb populatey
   156                                      
   157 000000B5 BB00000000              mov rbx, 0
   158                                  printloop:
   159 000000BA 48BF-                       mov rdi, printx
   159 000000BC [EF00000000000000] 
   160 000000C4 480FB7B41B-                 movzx rsi, word[coordx+rbx*2]
   160 000000C9 [2C000000]         
   161 000000CD B800000000                  mov rax, 0
   162 000000D2 E8(00000000)                call printf
   163                                  
   164 000000D7 48BF-                       mov rdi, printy
   164 000000D9 [F700000000000000] 
   165 000000E1 480FB7B41B-                 movzx rsi, word[coordy+rbx*2]
   165 000000E6 [7C000000]         
   166 000000EA B800000000                  mov rax, 0
   167 000000EF E8(00000000)                call printf
   168                                      
   169 000000F4 48FFC3                      inc rbx
   170 000000F7 4883FB28                    cmp rbx, NUM_POINTS
   171 000000FB 72BD                        jb printloop
   172                                  
   173                                  ; Trouver le point le plus à gauche
   174 000000FD BB00000000              mov rbx, 0
   175 00000102 66891C25[1F010000]      mov word[minpoint], bx
   176 0000010A 48FFC3                  inc rbx
   177                                  minAlgo:
   178                                      ; On récupère le point minimum actuel
   179 0000010D 480FB70C25-                 movzx rcx, word[minpoint]
   179 00000112 [1F010000]         
   180 00000116 480FB78409-                 movzx rax, word[coordx+rcx*2]
   180 0000011B [2C000000]         
   181                                      
   182                                      ; On le compare au point parcouru actuel
   183 0000011F 663B841B[2C000000]          cmp ax, word[coordx+rbx*2]
   184 00000127 760B                        jbe lower
   185                                              
   186                                      ; Si minpoint > point actuel, on mets point actuel dans minpoint
   187 00000129 4889D8                      mov rax, rbx
   188 0000012C 66890425[1F010000]          mov word[minpoint], ax
   189                                  
   190                                      lower:
   191 00000134 48FFC3                      inc rbx
   192 00000137 4883FB28                    cmp rbx, NUM_POINTS
   193 0000013B 72D0                        jb minAlgo
   194                                      
   195                                  ; Une fois cette étape fini, nous connaissons le point le plus à gauche.
   196                                  ; Marche de Jarvis
   197                                  ; rax = Prochain point (P)
   198                                  ; rbx = Index actuel de enveloppe (Pas d'équivalent, à ne pas utiliser pr l'instant)
   199                                  ; rcx = Prochain candidat de P (Q)
   200 0000013D 4831C0                  xor rax, rax
   201 00000140 668B0425[1F010000]      mov ax, word[minpoint]
   202 00000148 66890425[21010000]      mov word[P], ax
   203 00000150 66C70425[1C010000]-     mov word[sizeEnveloppe], 0
   203 00000158 0000               
   204                                  jarvis:
   205 0000015A 668B0425[21010000]          mov ax, word[P]
   206 00000162 4831DB                      xor rbx, rbx
   207 00000165 480FB71C25-                 movzx rbx, word[sizeEnveloppe]
   207 0000016A [1C010000]         
   208 0000016E 6689841B[CC000000]          mov word[enveloppe+rbx*2], ax
   209                                      
   210 00000176 66890425[23010000]          mov word[Q], ax
   211 0000017E 66FF0425[23010000]          inc word[Q]
   212 00000186 66833C25[23010000]-         cmp word[Q], NUM_POINTS
   212 0000018E 28                 
   213 0000018F 7209                        jb nofix
   214                                      
   215 00000191 66832C25[23010000]-         sub word[Q], NUM_POINTS
   215 00000199 28                 
   216                                      
   217                                      nofix:
   218 0000019A 66C70425[25010000]-         mov word[I], 0
   218 000001A2 0000               
   219                                      parcoursListe:
   220                                          ; Coord de P dans di et si
   221 000001A4 480FB70425-                     movzx rax, word[P]
   221 000001A9 [21010000]         
   222 000001AD 668BBC00[2C000000]              mov di, word[coordx+rax*2]
   223 000001B5 668BB400[7C000000]              mov si, word[coordy+rax*2]
   224                                          
   225                                          ; Coord de I dans dx et cx
   226 000001BD 480FB70425-                     movzx rax, word[I]
   226 000001C2 [25010000]         
   227 000001C6 668B9400[2C000000]              mov dx, word[coordx+rax*2]
   228 000001CE 668B8C00[7C000000]              mov cx, word[coordy+rax*2]
   229                                          
   230                                          ; Coord de Q dans r8w et r9w
   231 000001D6 480FB70425-                     movzx rax, word[Q]
   231 000001DB [23010000]         
   232 000001DF 66448B8400-                     mov r8w, word[coordx+rax*2]
   232 000001E4 [2C000000]         
   233 000001E8 66448B8C00-                     mov r9w, word[coordy+rax*2]
   233 000001ED [7C000000]         
   234 000001F1 B800000000                      mov rax, 0
   235 000001F6 E805FEFFFF                      call orientation
   236                                          
   237 000001FB 83F800                          cmp eax, 0
   238 000001FE 7E11                            jle nocandid
   239                                          
   240 00000200 480FB71C25-                     movzx rbx, word[I]
   240 00000205 [25010000]         
   241 00000209 66891C25[23010000]              mov word[Q], bx
   242                                          
   243                                          nocandid:
   244                                          
   245 00000211 66FF0425[25010000]              inc word[I]
   246 00000219 66833C25[25010000]-             cmp word[I], NUM_POINTS
   246 00000221 28                 
   247 00000222 7280                            jb parcoursListe    
   248 00000224 668B1C25[23010000]          mov bx, word[Q]
   249 0000022C 66891C25[21010000]          mov word[P], bx
   250 00000234 66FF0425[1C010000]          inc word[sizeEnveloppe]
   251                                  
   252 0000023C 668B1C25[1F010000]          mov bx, word[minpoint]
   253 00000244 66391C25[21010000]          cmp word[P], bx
   254 0000024C 0F8508FFFFFF                jne jarvis
   255                                  
   256                                  
   257 00000252 BB00000000              mov rbx, 0
   258                                  printenv:
   259 00000257 48BF-                       mov rdi, env
   259 00000259 [3C01000000000000] 
   260 00000261 480FB7B41B-                 movzx rsi, word[enveloppe+rbx*2]
   260 00000266 [CC000000]         
   261 0000026A B800000000                  mov rax, 0
   262 0000026F E8(00000000)                call printf
   263                                  
   264 00000274 48FFC3                      inc rbx
   265 00000277 663B1C25[1C010000]          cmp bx, word[sizeEnveloppe]
   266 0000027F 72D6                        jb printenv    
   267                                      
   268                                  ;fenetre dessin   
   269 00000281 4831FF                  xor     rdi,rdi
   270 00000284 E8(00000000)            call    XOpenDisplay	; Création de display
   271 00000289 48890425[00000000]      mov     qword[display_name],rax	; rax=nom du display
   272                                  
   273                                  ; display_name structure
   274                                  ; screen = DefaultScreen(display_name);
   275 00000291 488B0425[00000000]      mov     rax,qword[display_name]
   276 00000299 8B80E0000000            mov     eax,dword[rax+0xe0]
   277 0000029F 890425[08000000]        mov     dword[screen],eax
   278                                  
   279 000002A6 488B3C25[00000000]      mov rdi,qword[display_name]
   280 000002AE 8B3425[08000000]        mov esi,dword[screen]
   281 000002B5 E8(00000000)            call XRootWindow
   282 000002BA 4889C3                  mov rbx,rax
   283                                  
   284 000002BD 488B3C25[00000000]      mov rdi,qword[display_name]
   285 000002C5 4889DE                  mov rsi,rbx
   286 000002C8 BA0A000000              mov rdx,10
   287 000002CD B90A000000              mov rcx,10
   288 000002D2 41B890010000            mov r8,400	; largeur
   289 000002D8 41B990010000            mov r9,400	; hauteur
   290 000002DE 68FFFFFF00              push 0xFFFFFF	; background  0xRRGGBB
   291 000002E3 6800FF0000              push 0x00FF00
   292 000002E8 6A01                    push 1
   293 000002EA E8(00000000)            call XCreateSimpleWindow
   294 000002EF 48890425[1C000000]      mov qword[window],rax
   295                                  
   296 000002F7 488B3C25[00000000]      mov rdi,qword[display_name]
   297 000002FF 488B3425[1C000000]      mov rsi,qword[window]
   298 00000307 BA05000200              mov rdx,131077 ;131072
   299 0000030C E8(00000000)            call XSelectInput
   300                                  
   301 00000311 488B3C25[00000000]      mov rdi,qword[display_name]
   302 00000319 488B3425[1C000000]      mov rsi,qword[window]
   303 00000321 E8(00000000)            call XMapWindow
   304                                  
   305 00000326 488B3425[1C000000]      mov rsi,qword[window]
   306 0000032E BA00000000              mov rdx,0
   307 00000333 B900000000              mov rcx,0
   308 00000338 E8(00000000)            call XCreateGC
   309 0000033D 48890425[24000000]      mov qword[gc],rax
   310                                  
   311 00000345 488B3C25[00000000]      mov rdi,qword[display_name]
   312 0000034D 488B3425[24000000]      mov rsi,qword[gc]
   313 00000355 BA00000000              mov rdx,0x000000	; Couleur du crayon
   314 0000035A E8(00000000)            call XSetForeground
   315                                  
   316                                  boucle: ; boucle de gestion des évènements
   317 0000035F 488B3C25[00000000]      mov rdi,qword[display_name]
   318 00000367 48BE-                   mov rsi,event
   318 00000369 [0000000000000000] 
   319 00000371 E8(00000000)            call XNextEvent
   320                                  
   321 00000376 833C25[00000000]16      cmp dword[event],ConfigureNotify	; à l'apparition de la fenêtre
   322 0000037E 7410                    je dessin			; on saute au label 'dessin'
   323                                  
   324 00000380 833C25[00000000]02      cmp dword[event],KeyPress        ; Si on appuie sur une touche
   325 00000388 0F8479030000            je closeDisplay		        ; on saute au label 'closeDisplay' qui ferme la fenêtre
   326 0000038E EBCF                    jmp boucle
   327                                      
   328                                  ;#########################################
   329                                  ;#        DEBUT DE LA ZONE DE DESSIN     #
   330                                  ;#########################################
   331                                  dessin:
   332                                  
   333                                      ; boucle dessin point
   334                                      
   335 00000390 BB00000000                  mov rbx, 0  
   336                                      draw_point_loop:
   337                                  
   338                                          ;couleur du point 1
   339 00000395 488B3C25[00000000]              mov rdi,qword[display_name]
   340 0000039D 488B3425[24000000]              mov rsi,qword[gc]
   341 000003A5 BA00000000                      mov edx,0x000000	; Couleur noire
   342 000003AA E8(00000000)                    call XSetForeground
   343                                          
   344                                          ; Dessin d'un point du point
   345 000003AF 488B3C25[00000000]              mov rdi,qword[display_name]
   346 000003B7 488B3425[1C000000]              mov rsi,qword[window]
   347 000003BF 488B1425[24000000]              mov rdx,qword[gc]	
   348 000003C7 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; coordonnée en x du point généré
   348 000003CC [2C000000]         
   349 000003D0 83E903                          sub ecx,3		
   350 000003D3 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; coordonnée en y du point généré
   350 000003D8 [7C000000]         
   351 000003DC 4983E803                        sub r8,3
   352 000003E0 41B906000000                    mov r9,6
   353 000003E6 B8005A0000                      mov rax,23040
   354 000003EB 50                              push rax
   355 000003EC 6A00                            push 0
   356 000003EE 4151                            push r9
   357 000003F0 E8(00000000)                    call XFillArc
   358                                  
   359                                          ;++loopcounter
   360 000003F5 48FFC3                          inc rbx
   361                                          
   362                                          ;check if end loop
   363 000003F8 4883FB28                        cmp rbx, NUM_POINTS
   364 000003FC 7297                            jb draw_point_loop
   365                                          
   366                                          
   367 000003FE 48BF-                           mov rdi, printy
   367 00000400 [F700000000000000] 
   368 00000408 480FB73425-                     movzx rsi, word[sizeEnveloppe]
   368 0000040D [1C010000]         
   369 00000411 B800000000                      mov rax, 0
   370 00000416 E8(00000000)                    call printf
   371                                      
   372                                      
   373                                      ; boucle dessin ligne
   374                                      
   375 0000041B BB00000000                  mov rbx, 0 
   376 00000420 B800000000                  mov rax, 0
   377                                  
   378                                      draw_line_loop:
   379                                  
   380                                          ;couleur de la ligne 1
   381 00000425 488B3C25[00000000]              mov rdi,qword[display_name]
   382 0000042D 488B3425[24000000]              mov rsi,qword[gc]
   383 00000435 BA00000000                      mov edx,0x000000	; Couleur du crayon ; noir
   384 0000043A E8(00000000)                    call XSetForeground
   385                                          
   386                                          ;###debug
   387 0000043F 56                              push rsi
   388                                          
   389 00000440 48BF-                           mov rdi, printy
   389 00000442 [F700000000000000] 
   390 0000044A 4889DE                          mov rsi, rbx
   391 0000044D B800000000                      mov rax, 0
   392 00000452 E8(00000000)                    call printf
   393                                          
   394 00000457 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   394 0000045C [CC000000]         
   395 00000460 48BF-                           mov rdi, env
   395 00000462 [3C01000000000000] 
   396 0000046A 4889CE                          mov rsi, rcx
   397 0000046D B800000000                      mov rax, 0
   398 00000472 E8(00000000)                    call printf
   399                                          
   400 00000477 5E                              pop rsi
   401                                          ;;;;;;
   402                                          
   403                                          ;coordonnées de la ligne 1 (noire)
   404                                          
   405                                          ;Premier point
   406 00000478 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   406 0000047D [CC000000]         
   407                                          
   408                                          ;x
   409 00000481 0FB78409[2C000000]              movzx eax, word [coordx+rcx*2]
   410 00000489 890425[C0000000]                mov dword[x1],eax
   411 00000490 B800000000                      mov eax, 0
   412                                  
   413                                          ;y
   414 00000495 0FB78409[7C000000]              movzx eax, word [coordy+rcx*2]
   415 0000049D 890425[C8000000]                mov dword[y1],eax
   416 000004A4 B800000000                      mov eax, 0
   417                                          
   418                                          ;Second point
   419 000004A9 48FFC3                          inc rbx
   420                                          
   421                                          ;if rcx = sizeEnveloppe, go back to 1rst point
   422 000004AC B900000000                      mov rcx, 0
   423 000004B1 480FB70C25-                     movzx rcx, word[sizeEnveloppe]  
   423 000004B6 [1C010000]         
   424 000004BA 4839CB                          cmp rbx , rcx
   425 000004BD 0F8483000000                    je set_draw_last_point
   426                                          
   427 000004C3 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   427 000004C8 [CC000000]         
   428                                          
   429 000004CC 0FB78409[2C000000]              movzx eax, word [coordx+rcx*2]
   430 000004D4 890425[C4000000]                mov dword[x2], eax
   431 000004DB B800000000                      mov eax, 0
   432                                          
   433 000004E0 0FB78409[7C000000]              movzx eax, word [coordy+rcx*2]
   434 000004E8 890425[CC000000]                mov dword[y2], eax
   435 000004EF B800000000                      mov eax, 0
   436                                          
   437                                          ; dessin de la ligne 1
   438 000004F4 488B3C25[00000000]              mov rdi,qword[display_name]
   439 000004FC 488B3425[1C000000]              mov rsi,qword[window]
   440 00000504 488B1425[24000000]              mov rdx,qword[gc]
   441 0000050C 8B0C25[C0000000]                mov ecx,dword[x1]	; coordonnée source en x
   442 00000513 448B0425[C8000000]              mov r8d,dword[y1]	; coordonnée source en y
   443 0000051B 448B0C25[C4000000]              mov r9d,dword[x2]	; coordonnée destination en x
   444 00000523 FF3425[CC000000]                push qword[y2]		; coordonnée destination en y
   445 0000052A E8(00000000)                    call XDrawLine
   446                                          
   447                                          ;check if end loop
   448 0000052F B900000000                      mov rcx, 0
   449 00000534 480FB70C25-                     movzx rcx, word[sizeEnveloppe]
   449 00000539 [1C010000]         
   450 0000053D 4839CB                          cmp rbx , rcx
   451 00000540 0F82DFFEFFFF                    jb draw_line_loop
   452                                          
   453                                          set_draw_last_point:    
   454 00000546 BB00000000                          mov rbx, 0
   455 0000054B 480FB78C1B-                         movzx rcx, word[enveloppe+rbx*2]
   455 00000550 [CC000000]         
   456                                              
   457 00000554 0FB78409[2C000000]                  movzx eax, word [coordx+rcx*2]
   458 0000055C 890425[C4000000]                    mov dword[x2], eax
   459 00000563 B800000000                          mov eax, 0
   460                                              
   461 00000568 0FB78409[7C000000]                  movzx eax, word [coordy+rcx*2]
   462 00000570 890425[CC000000]                    mov dword[y2], eax
   463 00000577 B800000000                          mov eax, 0
   464                                              
   465                                              ; dessin de la ligne 1
   466 0000057C 488B3C25[00000000]                  mov rdi,qword[display_name]
   467 00000584 488B3425[1C000000]                  mov rsi,qword[window]
   468 0000058C 488B1425[24000000]                  mov rdx,qword[gc]
   469 00000594 8B0C25[C0000000]                    mov ecx,dword[x1]	; coordonnée source en x
   470 0000059B 448B0425[C8000000]                  mov r8d,dword[y1]	; coordonnée source en y
   471 000005A3 448B0C25[C4000000]                  mov r9d,dword[x2]	; coordonnée destination en x
   472 000005AB FF3425[CC000000]                    push qword[y2]	; coordonnée destination en y
   473 000005B2 E8(00000000)                        call XDrawLine
   474                                              ;jmp flush
   475                                          
   476                                  color_point_left:
   477                                          ;mov rbx, (le point en question)
   478 000005B7 480FB71C25-                     movzx rbx, word[minpoint]
   478 000005BC [1F010000]         
   479                                          ;couleur du point 1
   480 000005C0 488B3C25[00000000]              mov rdi,qword[display_name]
   481 000005C8 488B3425[24000000]              mov rsi,qword[gc]
   482 000005D0 BAFF000000                      mov edx,0x0000FF	; Couleur bleu
   483 000005D5 E8(00000000)                    call XSetForeground
   484                                          
   485                                          ; Dessin du point
   486 000005DA 488B3C25[00000000]              mov rdi,qword[display_name]
   487 000005E2 488B3425[1C000000]              mov rsi,qword[window]
   488 000005EA 488B1425[24000000]              mov rdx,qword[gc]	
   489 000005F2 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   489 000005F7 [2C000000]         
   490 000005FB 83E903                          sub ecx,3		
   491 000005FE 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   491 00000603 [7C000000]         
   492 00000607 4983E803                        sub r8,3
   493 0000060B 41B906000000                    mov r9,6
   494 00000611 B8005A0000                      mov rax,23040
   495 00000616 50                              push rax
   496 00000617 6A00                            push 0
   497 00000619 4151                            push r9
   498 0000061B E8(00000000)                    call XFillArc
   499                                          ;jmp flush    
   500                                          
   501                                  color_point_in:
   502                                          ;mov rbx, (le point en question)
   503 00000620 BB02000000                      mov rbx, 2
   504                                          ;couleur du point 1
   505 00000625 488B3C25[00000000]              mov rdi,qword[display_name]
   506 0000062D 488B3425[24000000]              mov rsi,qword[gc]
   507 00000635 BA00FF0000                      mov edx,0x00FF00	; Couleur vert
   508 0000063A E8(00000000)                    call XSetForeground
   509                                          
   510                                          ; Dessin du point
   511 0000063F 488B3C25[00000000]              mov rdi,qword[display_name]
   512 00000647 488B3425[1C000000]              mov rsi,qword[window]
   513 0000064F 488B1425[24000000]              mov rdx,qword[gc]	
   514 00000657 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   514 0000065C [2C000000]         
   515 00000660 83E903                          sub ecx,3		
   516 00000663 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   516 00000668 [7C000000]         
   517 0000066C 4983E803                        sub r8,3
   518 00000670 41B906000000                    mov r9,6
   519 00000676 B8005A0000                      mov rax,23040
   520 0000067B 50                              push rax
   521 0000067C 6A00                            push 0
   522 0000067E 4151                            push r9
   523 00000680 E8(00000000)                    call XFillArc
   524                                          ;jmp flush
   525                                          
   526                                  color_point_out:
   527                                          ;mov rbx, (le point en question)
   528 00000685 BB01000000                      mov rbx, 1
   529                                          ;couleur du point 1
   530 0000068A 488B3C25[00000000]              mov rdi,qword[display_name]
   531 00000692 488B3425[24000000]              mov rsi,qword[gc]
   532 0000069A BA0000FF00                      mov edx,0xFF0000	; Couleur rouge
   533 0000069F E8(00000000)                    call XSetForeground
   534                                          
   535                                          ; Dessin du point
   536 000006A4 488B3C25[00000000]              mov rdi,qword[display_name]
   537 000006AC 488B3425[1C000000]              mov rsi,qword[window]
   538 000006B4 488B1425[24000000]              mov rdx,qword[gc]	
   539 000006BC 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   539 000006C1 [2C000000]         
   540 000006C5 83E903                          sub ecx,3		
   541 000006C8 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   541 000006CD [7C000000]         
   542 000006D1 4983E803                        sub r8,3
   543 000006D5 41B906000000                    mov r9,6
   544 000006DB B8005A0000                      mov rax,23040
   545 000006E0 50                              push rax
   546 000006E1 6A00                            push 0
   547 000006E3 4151                            push r9
   548 000006E5 E8(00000000)                    call XFillArc
   549 000006EA EB02                            jmp flush
   550                                  ; ############################
   551                                  ; # FIN DE LA ZONE DE DESSIN #
   552                                  ; ############################
   553 000006EC EB00                    jmp flush
   554                                  
   555                                  flush:
   556 000006EE 488B3C25[00000000]          mov rdi,qword[display_name]
   557 000006F6 E8(00000000)                call XFlush
   558 000006FB E95FFCFFFF                  jmp boucle
   559 00000700 B822000000                  mov rax,34
   560 00000705 0F05                        syscall
   561                                  
   562                                  closeDisplay:
   563 00000707 488B0425[00000000]          mov     rax,qword[display_name]
   564 0000070F 4889CF                      mov     rdi,rcx
   565 00000712 E8(00000000)                call    XCloseDisplay
   566 00000717 4831FF                      xor	    rdi,rdi
   567 0000071A E8(00000000)                call    exit	
   568                                  
   569                                  ; Pour fermer le programme proprement :
   570 0000071F B83C000000              mov    rax, 60         
   571 00000724 BF00000000              mov    rdi, 0
   572 00000729 0F05                    syscall
   573                                  
   574 0000072B C3                      ret
