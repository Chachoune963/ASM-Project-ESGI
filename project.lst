     1                                  ; external functions from X11 library
     2                                  extern XOpenDisplay
     3                                  extern XDisplayName
     4                                  extern XCloseDisplay
     5                                  extern XCreateSimpleWindow
     6                                  extern XMapWindow
     7                                  extern XRootWindow
     8                                  extern XSelectInput
     9                                  extern XFlush
    10                                  extern XCreateGC
    11                                  extern XSetForeground
    12                                  extern XDrawLine
    13                                  extern XDrawPoint
    14                                  extern XFillArc
    15                                  extern XNextEvent
    16                                  
    17                                  ; external functions from stdio library (ld-linux-x86-64.so.2)    
    18                                  extern printf
    19                                  extern exit
    20                                  
    21                                  %define	StructureNotifyMask	131072
    22                                  %define KeyPressMask		1
    23                                  %define ButtonPressMask		4
    24                                  %define MapNotify		19
    25                                  %define KeyPress		2
    26                                  %define ButtonPress		4
    27                                  %define Expose			12
    28                                  %define ConfigureNotify		22
    29                                  %define CreateNotify 16
    30                                  %define QWORD	8
    31                                  %define DWORD	4
    32                                  %define WORD	2
    33                                  %define BYTE	1
    34                                  
    35                                  global orientation
    36                                  orientation:
    37                                      ; Coord de P dans di et si
    38                                      ; Coord de I dans dx et cx
    39                                      ; Coord de Q dans r8w et r9w
    40                                      
    41                                      ; cx sera bientôt modifié mais on doit l'utiliser 2 fois
    42                                      ; Donc on le sauvegarde
    43 00000000 6651                        push cx
    44 00000002 6629F1                      sub cx, si
    45 00000005 664129D0                    sub r8w, dx
    46                                      
    47 00000009 66410FAFC8                  imul cx, r8w
    48                                      
    49                                      ; Nous n'utiliserons plus si
    50                                      ; Donc nous restaurons la valeur de cx dans si
    51 0000000E 665E                        pop si
    52 00000010 6629FA                      sub dx, di
    53 00000013 664129F1                    sub r9w, si
    54                                      
    55 00000017 66410FAFD1                  imul dx, r9w
    56                                      
    57 0000001C 6629D1                      sub cx, dx
    58                                      
    59 0000001F 6683F900                    cmp cx, 0
    60 00000023 7C07                        jl clockwise
    61                                      
    62 00000025 B801000000                  mov eax, 1
    63 0000002A EB05                        jmp endori
    64                                      
    65                                      clockwise:
    66 0000002C B800000000                  mov eax, 0
    67                                      
    68                                      endori:
    69 00000031 C3                      ret
    70                                  
    71                                  global main
    72                                  
    73                                  %DEFINE NUM_POINTS 5
    74                                  %DEFINE MAX_X 255
    75                                  %DEFINE MAX_Y 255
    76                                  
    77                                  section .data
    78 00000000 0000000000000000-       event:		times	24 dq 0
    78 00000000 <rep 18h>          
    79                                  
    80 000000C0 00000000                x1:	dd	0
    81 000000C4 00000000                x2:	dd	0
    82 000000C8 00000000                y1:	dd	0
    83 000000CC 00000000                y2:	dd	0
    84                                  
    85 000000D0 25640A00                fmt_printf: db "%d", 10, 0
    86 000000D4 76733A2025640A00        fmt_index: db "vs: %d", 10, 0
    87 000000DC 4D696E696D756D3A20-     fmt_min: db "Minimum: %d", 10, 0
    87 000000E5 25640A00           
    88                                  
    89 000000E9 546573740A00            test: db "Test", 10, 0
    90 000000EF 78203A2025640A00        printx: db "x : %d", 10, 0
    91 000000F7 79203A2025640A00        printy: db "y : %d", 10, 0
    92 000000FF 4F6E2074657374206C-     jpp: db "On test le point: %d...", 10, 0
    92 00000108 6520706F696E743A20-
    92 00000111 25642E2E2E0A00     
    93 00000118 417520505620646520-     jenaismarre: db "Au PV de %d...", 10, 0
    93 00000121 25642E2E2E0A00     
    94 00000128 446570756973206C65-     tuezmoi: db "Depuis le point %d", 10, 0
    94 00000131 20706F696E74202564-
    94 0000013A 0A00               
    95 0000013C 456E76656C6F707065-     env: db "Enveloppe: %d", 10, 0
    95 00000145 3A2025640A00       
    96 0000014B 436F65663A2025640A-     coef: db "Coef: %d", 10, 0
    96 00000154 00                 
    97 00000155 526573756C7461743A-     resultat: db "Resultat: %d", 10, 0
    97 0000015E 2025640A00         
    98                                  ;coordx: dw 10, 102, 102, 108, 19
    99                                  ;coordy: dw 171, 3, 182, 103, 25
   100                                  
   101                                  section .bss
   102 00000000 ????????????????        display_name:	resq	1
   103 00000008 ????????                screen:		resd	1
   104 0000000C ????????                depth:         	resd	1
   105 00000010 ????????                connection:    	resd	1
   106 00000014 ????????                width:         	resd	1
   107 00000018 ????????                height:        	resd	1
   108 0000001C ????????????????        window:		resq	1
   109 00000024 ????????????????        gc:		resq	1
   110                                  
   111 0000002C <res Ah>                coordx: resw NUM_POINTS
   112 00000036 <res Ah>                coordy: resw NUM_POINTS
   113 00000040 <res Ah>                enveloppe: resw NUM_POINTS
   114 0000004A ??                      sizeEnveloppe: resb 1
   115 0000004B ????                    randnum: resw 1
   116 0000004D ????                    minpoint: resw 1
   117                                  
   118 0000004F ????                    P: resw 1
   119 00000051 ????                    Q: resw 1
   120 00000053 ????                    I: resw 1
   121                                  
   122 00000055 ????                    lastPointX: resw 1
   123 00000057 ????                    lastPointY: resw 1
   124 00000059 ??                      isInside: resb 1
   125 0000005A ????                    checkIndex: resw 1
   126                                  
   127                                  section .text
   128                                  
   129                                  main:
   130                                  ; Génération des points du programme
   131 00000032 BB00000000              mov rbx, 0
   132                                  populatex:
   133 00000037 660FC7F0                    rdrand ax
   134 0000003B 66890425[4B000000]          mov [randnum], ax
   135                                      modx:
   136 00000043 66812C25[4B000000]-             sub word[randnum], MAX_X
   136 0000004B FF00               
   137 0000004D 66813C25[4B000000]-             cmp word[randnum], MAX_X
   137 00000055 FF00               
   138 00000057 73EA                            jae modx
   139 00000059 668B0425[4B000000]          mov ax, word[randnum]
   140 00000061 6689841B[2C000000]          mov word[coordx+rbx*2], ax
   141                                      
   142 00000069 48FFC3                      inc rbx
   143 0000006C 4883FB05                    cmp rbx, NUM_POINTS
   144 00000070 72C5                        jb populatex
   145                                  
   146 00000072 BB00000000              mov rbx, 0
   147                                  populatey:
   148 00000077 F9                          stc
   149                                      checkcf:
   150 00000078 660FC7F0                        rdrand ax
   151 0000007C 73FA                        jnc checkcf
   152 0000007E 66890425[4B000000]          mov word[randnum], ax
   153                                      mody:
   154 00000086 66812C25[4B000000]-             sub word[randnum], MAX_Y
   154 0000008E FF00               
   155 00000090 66813C25[4B000000]-             cmp word[randnum], MAX_Y
   155 00000098 FF00               
   156 0000009A 73EA                            jae mody
   157 0000009C 668B0425[4B000000]          mov ax, word[randnum]
   158 000000A4 6689841B[36000000]          mov word[coordy+rbx*2], ax
   159                                  
   160 000000AC 48FFC3                      inc rbx
   161 000000AF 4883FB05                    cmp rbx, NUM_POINTS
   162 000000B3 72C2                        jb populatey
   163                                     
   164 000000B5 BB00000000              mov rbx, 0
   165                                  printloop:
   166 000000BA 48BF-                       mov rdi, printx
   166 000000BC [EF00000000000000] 
   167 000000C4 480FB7B41B-                 movzx rsi, word[coordx+rbx*2]
   167 000000C9 [2C000000]         
   168 000000CD B800000000                  mov rax, 0
   169 000000D2 E8(00000000)                call printf
   170                                  
   171 000000D7 48BF-                       mov rdi, printy
   171 000000D9 [F700000000000000] 
   172 000000E1 480FB7B41B-                 movzx rsi, word[coordy+rbx*2]
   172 000000E6 [36000000]         
   173 000000EA B800000000                  mov rax, 0
   174 000000EF E8(00000000)                call printf
   175                                      
   176 000000F4 48FFC3                      inc rbx
   177 000000F7 4883FB05                    cmp rbx, NUM_POINTS
   178 000000FB 72BD                        jb printloop
   179                                  
   180                                  ; Trouver le point le plus à gauche
   181 000000FD BB00000000              mov rbx, 0
   182 00000102 66891C25[4D000000]      mov word[minpoint], bx
   183 0000010A 48FFC3                  inc rbx
   184                                  minAlgo:
   185                                      ; On récupère le point minimum actuel
   186 0000010D 480FB70C25-                 movzx rcx, word[minpoint]
   186 00000112 [4D000000]         
   187 00000116 480FB78409-                 movzx rax, word[coordx+rcx*2]
   187 0000011B [2C000000]         
   188                                      
   189                                      ; On le compare au point parcouru actuel
   190 0000011F 663B841B[2C000000]          cmp ax, word[coordx+rbx*2]
   191 00000127 760B                        jbe lower
   192                                              
   193                                      ; Si minpoint > point actuel, on mets point actuel dans minpoint
   194 00000129 4889D8                      mov rax, rbx
   195 0000012C 66890425[4D000000]          mov word[minpoint], ax
   196                                  
   197                                      lower:
   198 00000134 48FFC3                      inc rbx
   199 00000137 4883FB05                    cmp rbx, NUM_POINTS
   200 0000013B 72D0                        jb minAlgo
   201                                      
   202                                  ; Une fois cette étape fini, nous connaissons le point le plus à gauche.
   203                                  ; Marche de Jarvis
   204                                  ; rax = Prochain point (P)
   205                                  ; rbx = Index actuel de enveloppe (Pas d'équivalent, à ne pas utiliser pr l'instant)
   206                                  ; rcx = Prochain candidat de P (Q)
   207 0000013D 4831C0                  xor rax, rax
   208 00000140 668B0425[4D000000]      mov ax, word[minpoint]
   209 00000148 66890425[4F000000]      mov word[P], ax
   210 00000150 66C70425[4A000000]-     mov word[sizeEnveloppe], 0
   210 00000158 0000               
   211                                  jarvis:
   212 0000015A 668B0425[4F000000]          mov ax, word[P]
   213 00000162 4831DB                      xor rbx, rbx
   214 00000165 480FB71C25-                 movzx rbx, word[sizeEnveloppe]
   214 0000016A [4A000000]         
   215 0000016E 6689841B[40000000]          mov word[enveloppe+rbx*2], ax
   216                                      
   217 00000176 66890425[51000000]          mov word[Q], ax
   218 0000017E 66FF0425[51000000]          inc word[Q]
   219 00000186 66833C25[51000000]-         cmp word[Q], NUM_POINTS
   219 0000018E 05                 
   220 0000018F 7209                        jb nofix
   221                                      
   222 00000191 66832C25[51000000]-         sub word[Q], NUM_POINTS
   222 00000199 05                 
   223                                      
   224                                      nofix:
   225 0000019A 66C70425[53000000]-         mov word[I], 0
   225 000001A2 0000               
   226                                      parcoursListe:
   227 000001A4 668B1C25[4F000000]              mov bx, word[P]
   228 000001AC 66391C25[53000000]              cmp word[I], bx
   229 000001B4 746D                            je nocandid
   230                                          ; Coord de P dans di et si
   231 000001B6 480FB70425-                     movzx rax, word[P]
   231 000001BB [4F000000]         
   232 000001BF 668BBC00[2C000000]              mov di, word[coordx+rax*2]
   233 000001C7 668BB400[36000000]              mov si, word[coordy+rax*2]
   234                                          
   235                                          ; Coord de I dans dx et cx
   236 000001CF 480FB70425-                     movzx rax, word[I]
   236 000001D4 [53000000]         
   237 000001D8 668B9400[2C000000]              mov dx, word[coordx+rax*2]
   238 000001E0 668B8C00[36000000]              mov cx, word[coordy+rax*2]
   239                                          
   240                                          ; Coord de Q dans r8w et r9w
   241 000001E8 480FB70425-                     movzx rax, word[Q]
   241 000001ED [51000000]         
   242 000001F1 66448B8400-                     mov r8w, word[coordx+rax*2]
   242 000001F6 [2C000000]         
   243 000001FA 66448B8C00-                     mov r9w, word[coordy+rax*2]
   243 000001FF [36000000]         
   244 00000203 B800000000                      mov rax, 0
   245 00000208 E8F3FDFFFF                      call orientation
   246                                          
   247 0000020D 83F800                          cmp eax, 0
   248 00000210 7E11                            jle nocandid
   249                                          
   250 00000212 480FB71C25-                     movzx rbx, word[I]
   250 00000217 [53000000]         
   251 0000021B 66891C25[51000000]              mov word[Q], bx
   252                                          
   253                                          nocandid:
   254                                          
   255 00000223 66FF0425[53000000]              inc word[I]
   256 0000022B 66833C25[53000000]-             cmp word[I], NUM_POINTS
   256 00000233 05                 
   257 00000234 0F826AFFFFFF                    jb parcoursListe    
   258 0000023A 668B1C25[51000000]          mov bx, word[Q]
   259 00000242 66891C25[4F000000]          mov word[P], bx
   260 0000024A 66FF0425[4A000000]          inc word[sizeEnveloppe]
   261                                  
   262 00000252 668B1C25[4D000000]          mov bx, word[minpoint]
   263 0000025A 66391C25[4F000000]          cmp word[P], bx
   264 00000262 0F85F2FEFFFF                jne jarvis
   265                                  
   266                                  
   267 00000268 BB00000000              mov rbx, 0
   268                                  printenv:
   269 0000026D 48BF-                       mov rdi, env
   269 0000026F [3C01000000000000] 
   270 00000277 480FB7B41B-                 movzx rsi, word[enveloppe+rbx*2]
   270 0000027C [40000000]         
   271 00000280 B800000000                  mov rax, 0
   272 00000285 E8(00000000)                call printf
   273                                  
   274 0000028A 48FFC3                      inc rbx
   275 0000028D 663B1C25[4A000000]          cmp bx, word[sizeEnveloppe]
   276 00000295 72D6                        jb printenv  
   277                                      
   278 00000297 660FC7F0                rdrand ax
   279 0000029B 66C70425[55000000]-     mov word[lastPointX], 50; ax
   279 000002A3 3200               
   280                                  lastmodx:
   281                                  ;    sub word[lastPointX], MAX_X
   282                                  ;    cmp word[lastPointX], MAX_X
   283                                  ;    jae lastmodx
   284                                      
   285 000002A5 660FC7F0                rdrand ax
   286 000002A9 66C70425[57000000]-     mov word[lastPointY], 75; ax
   286 000002B1 4B00               
   287                                  lastmody:
   288                                  ;    sub word[lastPointY], MAX_Y
   289                                  ;    cmp word[lastPointY], MAX_Y
   290                                  ;    jae lastmody
   291                                      
   292 000002B3 66C70425[5A000000]-     mov word[checkIndex], 0
   292 000002BB 0000               
   293 000002BD 66C70425[59000000]-     mov word[isInside], 1
   293 000002C5 0100               
   294                                  checkInside:
   295 000002C7 480FB70425-                 movzx rax, word[checkIndex]
   295 000002CC [5A000000]         
   296 000002D0 668B9C00[40000000]          mov bx, word[enveloppe+rax*2]
   297 000002D8 66891C25[4F000000]          mov word[P], bx
   298 000002E0 66FFC3                      inc bx
   299 000002E3 66391C25[4A000000]          cmp word[sizeEnveloppe], bx
   300 000002EB 7512                        jne nolooped
   301                                      
   302 000002ED 668B1C25[40000000]          mov bx, word[enveloppe]
   303 000002F5 66891C25[53000000]          mov word[I], bx
   304 000002FD EB10                        jmp endlooped
   305                                      
   306                                      nolooped:
   307 000002FF 668B9C00[42000000]          mov bx, word[enveloppe+(rax+1)*2]
   308 00000307 66891C25[53000000]          mov word[I], bx
   309                                      
   310                                      endlooped:
   311                                      ; Coord de P dans di et si
   312 0000030F 480FB70425-                 movzx rax, word[P]
   312 00000314 [4F000000]         
   313 00000318 668BBC00[2C000000]          mov di, word[coordx+rax*2]
   314 00000320 668BB400[36000000]          mov si, word[coordy+rax*2]
   315                                      
   316                                      ; Coord de I dans dx et cx
   317 00000328 480FB70425-                 movzx rax, word[I]
   317 0000032D [53000000]         
   318 00000331 668B9400[2C000000]          mov dx, word[coordx+rax*2]
   319 00000339 668B8C00[36000000]          mov cx, word[coordy+rax*2]
   320                                      
   321                                      ; Coord de lastPoint dans r8w et r9w
   322 00000341 66448B0425-                 mov r8w, word[lastPointX]
   322 00000346 [55000000]         
   323 0000034A 66448B0C25-                 mov r9w, word[lastPointY]
   323 0000034F [57000000]         
   324 00000353 B800000000                  mov rax, 0
   325 00000358 E8A3FCFFFF                  call orientation
   326                                      
   327 0000035D 83F800                      cmp eax, 0
   328 00000360 7508                        jne nextCheck
   329                                      
   330 00000362 C60425[59000000]00          mov byte[isInside], 0
   331                                      
   332                                      nextCheck:
   333 0000036A 66FF0425[5A000000]          inc word[checkIndex]
   334 00000372 480FB70425-                 movzx rax, word[sizeEnveloppe]
   334 00000377 [4A000000]         
   335 0000037B 66390425[5A000000]          cmp word[checkIndex], ax
   336 00000383 0F823EFFFFFF                jb checkInside
   337                                  
   338 00000389 48BF-                   mov rdi, printx
   338 0000038B [EF00000000000000] 
   339 00000393 480FB73425-             movzx rsi, word[lastPointX]
   339 00000398 [55000000]         
   340 0000039C B800000000              mov rax, 0
   341 000003A1 E8(00000000)            call printf
   342                                  
   343 000003A6 48BF-                   mov rdi, printy
   343 000003A8 [F700000000000000] 
   344 000003B0 480FB73425-             movzx rsi, word[lastPointY]
   344 000003B5 [57000000]         
   345 000003B9 B800000000              mov rax, 0
   346 000003BE E8(00000000)            call printf
   347                                  
   348 000003C3 48BF-                   mov rdi, resultat
   348 000003C5 [5501000000000000] 
   349 000003CD 480FB63425-             movzx rsi, byte[isInside]
   349 000003D2 [59000000]         
   350 000003D6 B800000000              mov rax, 0
   351 000003DB E8(00000000)            call printf
   352                                          
   353                                          
   354                                  ;fenetre dessin   
   355 000003E0 4831FF                  xor     rdi,rdi
   356 000003E3 E8(00000000)            call    XOpenDisplay	; Création de display
   357 000003E8 48890425[00000000]      mov     qword[display_name],rax	; rax=nom du display
   358                                  
   359                                  ; display_name structure
   360                                  ; screen = DefaultScreen(display_name);
   361 000003F0 488B0425[00000000]      mov     rax,qword[display_name]
   362 000003F8 8B80E0000000            mov     eax,dword[rax+0xe0]
   363 000003FE 890425[08000000]        mov     dword[screen],eax
   364                                  
   365 00000405 488B3C25[00000000]      mov rdi,qword[display_name]
   366 0000040D 8B3425[08000000]        mov esi,dword[screen]
   367 00000414 E8(00000000)            call XRootWindow
   368 00000419 4889C3                  mov rbx,rax
   369                                  
   370 0000041C 488B3C25[00000000]      mov rdi,qword[display_name]
   371 00000424 4889DE                  mov rsi,rbx
   372 00000427 BA0A000000              mov rdx,10
   373 0000042C B90A000000              mov rcx,10
   374 00000431 41B890010000            mov r8,400	; largeur
   375 00000437 41B990010000            mov r9,400	; hauteur
   376 0000043D 68FFFFFF00              push 0xFFFFFF	; background  0xRRGGBB
   377 00000442 6800FF0000              push 0x00FF00
   378 00000447 6A01                    push 1
   379 00000449 E8(00000000)            call XCreateSimpleWindow
   380 0000044E 48890425[1C000000]      mov qword[window],rax
   381                                  
   382 00000456 488B3C25[00000000]      mov rdi,qword[display_name]
   383 0000045E 488B3425[1C000000]      mov rsi,qword[window]
   384 00000466 BA05000200              mov rdx,131077 ;131072
   385 0000046B E8(00000000)            call XSelectInput
   386                                  
   387 00000470 488B3C25[00000000]      mov rdi,qword[display_name]
   388 00000478 488B3425[1C000000]      mov rsi,qword[window]
   389 00000480 E8(00000000)            call XMapWindow
   390                                  
   391 00000485 488B3425[1C000000]      mov rsi,qword[window]
   392 0000048D BA00000000              mov rdx,0
   393 00000492 B900000000              mov rcx,0
   394 00000497 E8(00000000)            call XCreateGC
   395 0000049C 48890425[24000000]      mov qword[gc],rax
   396                                  
   397 000004A4 488B3C25[00000000]      mov rdi,qword[display_name]
   398 000004AC 488B3425[24000000]      mov rsi,qword[gc]
   399 000004B4 BA00000000              mov rdx,0x000000	; Couleur du crayon
   400 000004B9 E8(00000000)            call XSetForeground
   401                                  
   402                                  boucle: ; boucle de gestion des évènements
   403 000004BE 488B3C25[00000000]      mov rdi,qword[display_name]
   404 000004C6 48BE-                   mov rsi,event
   404 000004C8 [0000000000000000] 
   405 000004D0 E8(00000000)            call XNextEvent
   406                                  
   407 000004D5 833C25[00000000]16      cmp dword[event],ConfigureNotify	; à l'apparition de la fenêtre
   408 000004DD 7410                    je dessin			; on saute au label 'dessin'
   409                                  
   410 000004DF 833C25[00000000]02      cmp dword[event],KeyPress        ; Si on appuie sur une touche
   411 000004E7 0F8479030000            je closeDisplay		        ; on saute au label 'closeDisplay' qui ferme la fenêtre
   412 000004ED EBCF                    jmp boucle
   413                                      
   414                                  ;#########################################
   415                                  ;#        DEBUT DE LA ZONE DE DESSIN     #
   416                                  ;#########################################
   417                                  dessin:
   418                                  
   419                                      ; boucle dessin point
   420                                      
   421 000004EF BB00000000                  mov rbx, 0  
   422                                      draw_point_loop:
   423                                  
   424                                          ;couleur du point 1
   425 000004F4 488B3C25[00000000]              mov rdi,qword[display_name]
   426 000004FC 488B3425[24000000]              mov rsi,qword[gc]
   427 00000504 BA00000000                      mov edx,0x000000	; Couleur noire
   428 00000509 E8(00000000)                    call XSetForeground
   429                                          
   430                                          ; Dessin d'un point du point
   431 0000050E 488B3C25[00000000]              mov rdi,qword[display_name]
   432 00000516 488B3425[1C000000]              mov rsi,qword[window]
   433 0000051E 488B1425[24000000]              mov rdx,qword[gc]	
   434 00000526 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; coordonnée en x du point généré
   434 0000052B [2C000000]         
   435 0000052F 83E903                          sub ecx,3		
   436 00000532 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; coordonnée en y du point généré
   436 00000537 [36000000]         
   437 0000053B 4983E803                        sub r8,3
   438 0000053F 41B906000000                    mov r9,6
   439 00000545 B8005A0000                      mov rax,23040
   440 0000054A 50                              push rax
   441 0000054B 6A00                            push 0
   442 0000054D 4151                            push r9
   443 0000054F E8(00000000)                    call XFillArc
   444                                  
   445                                          ;++loopcounter
   446 00000554 48FFC3                          inc rbx
   447                                          
   448                                          ;check if end loop
   449 00000557 4883FB05                        cmp rbx, NUM_POINTS
   450 0000055B 7297                            jb draw_point_loop
   451                                          
   452                                          
   453 0000055D 48BF-                           mov rdi, printy
   453 0000055F [F700000000000000] 
   454 00000567 480FB73425-                     movzx rsi, word[sizeEnveloppe]
   454 0000056C [4A000000]         
   455 00000570 B800000000                      mov rax, 0
   456 00000575 E8(00000000)                    call printf
   457                                      
   458                                      
   459                                      ; boucle dessin ligne
   460                                      
   461 0000057A BB00000000                  mov rbx, 0 
   462 0000057F B800000000                  mov rax, 0
   463                                  
   464                                      draw_line_loop:
   465                                  
   466                                          ;couleur de la ligne 1
   467 00000584 488B3C25[00000000]              mov rdi,qword[display_name]
   468 0000058C 488B3425[24000000]              mov rsi,qword[gc]
   469 00000594 BA00000000                      mov edx,0x000000	; Couleur du crayon ; noir
   470 00000599 E8(00000000)                    call XSetForeground
   471                                          
   472                                          ;###debug
   473 0000059E 56                              push rsi
   474                                          
   475 0000059F 48BF-                           mov rdi, printy
   475 000005A1 [F700000000000000] 
   476 000005A9 4889DE                          mov rsi, rbx
   477 000005AC B800000000                      mov rax, 0
   478 000005B1 E8(00000000)                    call printf
   479                                          
   480 000005B6 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   480 000005BB [40000000]         
   481 000005BF 48BF-                           mov rdi, env
   481 000005C1 [3C01000000000000] 
   482 000005C9 4889CE                          mov rsi, rcx
   483 000005CC B800000000                      mov rax, 0
   484 000005D1 E8(00000000)                    call printf
   485                                          
   486 000005D6 5E                              pop rsi
   487                                          ;;;;;;
   488                                          
   489                                          ;coordonnées de la ligne 1 (noire)
   490                                          
   491                                          ;Premier point
   492 000005D7 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   492 000005DC [40000000]         
   493                                          
   494                                          ;x
   495 000005E0 0FB78409[2C000000]              movzx eax, word [coordx+rcx*2]
   496 000005E8 890425[C0000000]                mov dword[x1],eax
   497 000005EF B800000000                      mov eax, 0
   498                                  
   499                                          ;y
   500 000005F4 0FB78409[36000000]              movzx eax, word [coordy+rcx*2]
   501 000005FC 890425[C8000000]                mov dword[y1],eax
   502 00000603 B800000000                      mov eax, 0
   503                                          
   504                                          ;Second point
   505 00000608 48FFC3                          inc rbx
   506                                          
   507                                          ;if rcx = sizeEnveloppe, go back to 1rst point
   508 0000060B B900000000                      mov rcx, 0
   509 00000610 480FB70C25-                     movzx rcx, word[sizeEnveloppe]  
   509 00000615 [4A000000]         
   510 00000619 4839CB                          cmp rbx , rcx
   511 0000061C 0F8483000000                    je set_draw_last_point
   512                                          
   513 00000622 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   513 00000627 [40000000]         
   514                                          
   515 0000062B 0FB78409[2C000000]              movzx eax, word [coordx+rcx*2]
   516 00000633 890425[C4000000]                mov dword[x2], eax
   517 0000063A B800000000                      mov eax, 0
   518                                          
   519 0000063F 0FB78409[36000000]              movzx eax, word [coordy+rcx*2]
   520 00000647 890425[CC000000]                mov dword[y2], eax
   521 0000064E B800000000                      mov eax, 0
   522                                          
   523                                          ; dessin de la ligne 1
   524 00000653 488B3C25[00000000]              mov rdi,qword[display_name]
   525 0000065B 488B3425[1C000000]              mov rsi,qword[window]
   526 00000663 488B1425[24000000]              mov rdx,qword[gc]
   527 0000066B 8B0C25[C0000000]                mov ecx,dword[x1]	; coordonnée source en x
   528 00000672 448B0425[C8000000]              mov r8d,dword[y1]	; coordonnée source en y
   529 0000067A 448B0C25[C4000000]              mov r9d,dword[x2]	; coordonnée destination en x
   530 00000682 FF3425[CC000000]                push qword[y2]		; coordonnée destination en y
   531 00000689 E8(00000000)                    call XDrawLine
   532                                          
   533                                          ;check if end loop
   534 0000068E B900000000                      mov rcx, 0
   535 00000693 480FB70C25-                     movzx rcx, word[sizeEnveloppe]
   535 00000698 [4A000000]         
   536 0000069C 4839CB                          cmp rbx , rcx
   537 0000069F 0F82DFFEFFFF                    jb draw_line_loop
   538                                          
   539                                          set_draw_last_point:    
   540 000006A5 BB00000000                          mov rbx, 0
   541 000006AA 480FB78C1B-                         movzx rcx, word[enveloppe+rbx*2]
   541 000006AF [40000000]         
   542                                              
   543 000006B3 0FB78409[2C000000]                  movzx eax, word [coordx+rcx*2]
   544 000006BB 890425[C4000000]                    mov dword[x2], eax
   545 000006C2 B800000000                          mov eax, 0
   546                                              
   547 000006C7 0FB78409[36000000]                  movzx eax, word [coordy+rcx*2]
   548 000006CF 890425[CC000000]                    mov dword[y2], eax
   549 000006D6 B800000000                          mov eax, 0
   550                                              
   551                                              ; dessin de la ligne 1
   552 000006DB 488B3C25[00000000]                  mov rdi,qword[display_name]
   553 000006E3 488B3425[1C000000]                  mov rsi,qword[window]
   554 000006EB 488B1425[24000000]                  mov rdx,qword[gc]
   555 000006F3 8B0C25[C0000000]                    mov ecx,dword[x1]	; coordonnée source en x
   556 000006FA 448B0425[C8000000]                  mov r8d,dword[y1]	; coordonnée source en y
   557 00000702 448B0C25[C4000000]                  mov r9d,dword[x2]	; coordonnée destination en x
   558 0000070A FF3425[CC000000]                    push qword[y2]	; coordonnée destination en y
   559 00000711 E8(00000000)                        call XDrawLine
   560                                              ;jmp flush
   561                                          
   562                                  color_point_left:
   563                                          ;mov rbx, (le point en question)
   564 00000716 480FB71C25-                     movzx rbx, word[minpoint]
   564 0000071B [4D000000]         
   565                                          ;couleur du point 1
   566 0000071F 488B3C25[00000000]              mov rdi,qword[display_name]
   567 00000727 488B3425[24000000]              mov rsi,qword[gc]
   568 0000072F BAFF000000                      mov edx,0x0000FF	; Couleur bleu
   569 00000734 E8(00000000)                    call XSetForeground
   570                                          
   571                                          ; Dessin du point
   572 00000739 488B3C25[00000000]              mov rdi,qword[display_name]
   573 00000741 488B3425[1C000000]              mov rsi,qword[window]
   574 00000749 488B1425[24000000]              mov rdx,qword[gc]	
   575 00000751 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   575 00000756 [2C000000]         
   576 0000075A 83E903                          sub ecx,3		
   577 0000075D 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   577 00000762 [36000000]         
   578 00000766 4983E803                        sub r8,3
   579 0000076A 41B906000000                    mov r9,6
   580 00000770 B8005A0000                      mov rax,23040
   581 00000775 50                              push rax
   582 00000776 6A00                            push 0
   583 00000778 4151                            push r9
   584 0000077A E8(00000000)                    call XFillArc
   585                                          ;jmp flush    
   586                                          
   587                                  color_point_in:
   588                                          ;mov rbx, (le point en question)
   589 0000077F BB02000000                      mov rbx, 2
   590                                          ;couleur du point 1
   591 00000784 488B3C25[00000000]              mov rdi,qword[display_name]
   592 0000078C 488B3425[24000000]              mov rsi,qword[gc]
   593 00000794 BA00FF0000                      mov edx,0x00FF00	; Couleur vert
   594 00000799 E8(00000000)                    call XSetForeground
   595                                          
   596                                          ; Dessin du point
   597 0000079E 488B3C25[00000000]              mov rdi,qword[display_name]
   598 000007A6 488B3425[1C000000]              mov rsi,qword[window]
   599 000007AE 488B1425[24000000]              mov rdx,qword[gc]	
   600 000007B6 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   600 000007BB [2C000000]         
   601 000007BF 83E903                          sub ecx,3		
   602 000007C2 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   602 000007C7 [36000000]         
   603 000007CB 4983E803                        sub r8,3
   604 000007CF 41B906000000                    mov r9,6
   605 000007D5 B8005A0000                      mov rax,23040
   606 000007DA 50                              push rax
   607 000007DB 6A00                            push 0
   608 000007DD 4151                            push r9
   609 000007DF E8(00000000)                    call XFillArc
   610                                          ;jmp flush
   611                                          
   612                                  color_point_out:
   613                                          ;mov rbx, (le point en question)
   614 000007E4 BB01000000                      mov rbx, 1
   615                                          ;couleur du point 1
   616 000007E9 488B3C25[00000000]              mov rdi,qword[display_name]
   617 000007F1 488B3425[24000000]              mov rsi,qword[gc]
   618 000007F9 BA0000FF00                      mov edx,0xFF0000	; Couleur rouge
   619 000007FE E8(00000000)                    call XSetForeground
   620                                          
   621                                          ; Dessin du point
   622 00000803 488B3C25[00000000]              mov rdi,qword[display_name]
   623 0000080B 488B3425[1C000000]              mov rsi,qword[window]
   624 00000813 488B1425[24000000]              mov rdx,qword[gc]	
   625 0000081B 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   625 00000820 [2C000000]         
   626 00000824 83E903                          sub ecx,3		
   627 00000827 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   627 0000082C [36000000]         
   628 00000830 4983E803                        sub r8,3
   629 00000834 41B906000000                    mov r9,6
   630 0000083A B8005A0000                      mov rax,23040
   631 0000083F 50                              push rax
   632 00000840 6A00                            push 0
   633 00000842 4151                            push r9
   634 00000844 E8(00000000)                    call XFillArc
   635 00000849 EB02                            jmp flush
   636                                  ; ############################
   637                                  ; # FIN DE LA ZONE DE DESSIN #
   638                                  ; ############################
   639 0000084B EB00                    jmp flush
   640                                  
   641                                  flush:
   642 0000084D 488B3C25[00000000]          mov rdi,qword[display_name]
   643 00000855 E8(00000000)                call XFlush
   644 0000085A E95FFCFFFF                  jmp boucle
   645 0000085F B822000000                  mov rax,34
   646 00000864 0F05                        syscall
   647                                  
   648                                  closeDisplay:
   649 00000866 488B0425[00000000]          mov     rax,qword[display_name]
   650 0000086E 4889CF                      mov     rdi,rcx
   651 00000871 E8(00000000)                call    XCloseDisplay
   652 00000876 4831FF                      xor	    rdi,rdi
   653 00000879 E8(00000000)                call    exit	
   654                                  
   655                                  ; Pour fermer le programme proprement :
   656 0000087E B83C000000              mov    rax, 60         
   657 00000883 BF00000000              mov    rdi, 0
   658 00000888 0F05                    syscall
   659                                  
   660 0000088A C3                      ret
