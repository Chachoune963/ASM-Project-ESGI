     1                                  extern printf
     2                                  
     3                                  global main
     4                                  
     5                                  %DEFINE NUM_POINTS 10
     6                                  %DEFINE MAX_X 255
     7                                  %DEFINE MAX_Y 255
     8                                  
     9                                  section .data
    10 00000000 25640A00                fmt_printf: db "%d", 10, 0
    11 00000004 76733A2025640A00        fmt_index: db "vs: %d", 10, 0
    12 0000000C 4D696E696D756D3A20-     fmt_min: db "Minimum: %d", 10, 0
    12 00000015 25640A00           
    13                                  
    14                                  section .bss
    15 00000000 <res 14h>               coordx: resw NUM_POINTS
    16 00000014 <res 14h>               coordy: resw NUM_POINTS
    17 00000028 ????                    randnum: resw 1
    18 0000002A ????                    minpoint: resw 1
    19                                  
    20                                  section .text
    21                                  main:
    22                                  ; Génération des points du programme
    23 00000000 BB00000000              mov rbx, 0
    24                                  populatex:
    25 00000005 660FC7F0                    rdrand ax
    26 00000009 66890425[28000000]          mov [randnum], ax
    27                                      modx:
    28 00000011 66812C25[28000000]-             sub word[randnum], MAX_X
    28 00000019 FF00               
    29 0000001B 66813C25[28000000]-             cmp word[randnum], MAX_X
    29 00000023 FF00               
    30 00000025 73EA                            jae modx
    31 00000027 668B0425[28000000]          mov ax, word[randnum]
    32 0000002F 6689841B[00000000]          mov word[coordx+rbx*2], ax
    33                                      
    34 00000037 48BF-                       mov rdi, fmt_printf
    34 00000039 [0000000000000000] 
    35 00000041 480FB7B41B-                 movzx rsi, word[coordx+rbx*2]
    35 00000046 [00000000]         
    36 0000004A B800000000                  mov rax, 0
    37 0000004F E8(00000000)                call printf
    38                                      
    39 00000054 48FFC3                      inc rbx
    40 00000057 4883FB0A                    cmp rbx, NUM_POINTS
    41 0000005B 72A8                        jb populatex
    42                                  
    43                                  populatey:
    44 0000005D F9                          stc
    45                                      checkcf:
    46 0000005E 660FC7F0                        rdrand ax
    47 00000062 73FA                        jnc checkcf
    48 00000064 66890425[28000000]          mov [randnum], ax
    49                                      mody:
    50 0000006C 66812C25[28000000]-             sub word[randnum], MAX_Y
    50 00000074 FF00               
    51 00000076 66813C25[28000000]-             cmp word[randnum], MAX_Y
    51 0000007E FF00               
    52 00000080 73EA                            jae mody
    53 00000082 668B0425[28000000]          mov ax, word[randnum]
    54 0000008A 6689841B[14000000]          mov word[coordy+rbx*2], ax
    55 00000092 48FFC3                      inc rbx
    56 00000095 4883FB0A                    cmp rbx, NUM_POINTS
    57 00000099 72C2                        jb populatey
    58                                      
    59                                  ; Trouver le point le plus à gauche
    60 0000009B BB00000000              mov rbx, 0
    61 000000A0 66891C25[2A000000]      mov word[minpoint], bx
    62 000000A8 48FFC3                  inc rbx
    63                                  minAlgo:
    64                                      ; On récupère le point minimum actuel
    65 000000AB 480FB70C25-                 movzx rcx, word[minpoint]
    65 000000B0 [2A000000]         
    66 000000B4 480FB78409-                 movzx rax, word[coordx+rcx*2]
    66 000000B9 [00000000]         
    67                                      
    68                                      ; On le compare au point parcouru actuel
    69 000000BD 663B841B[00000000]          cmp ax, word[coordx+rbx*2]
    70 000000C5 720B                        jb higher
    71                                              
    72 000000C7 4889D8                      mov rax, rbx
    73 000000CA 66890425[2A000000]          mov word[minpoint], ax
    74                                  
    75                                      higher:
    76 000000D2 48FFC3                      inc rbx
    77 000000D5 4883FB0A                    cmp rbx, NUM_POINTS
    78 000000D9 72D0                        jb minAlgo
    79                                  
    80 000000DB 48BF-                   mov rdi, fmt_min
    80 000000DD [0C00000000000000] 
    81 000000E5 480FB73425-             movzx rsi, word[minpoint]
    81 000000EA [2A000000]         
    82 000000EE B800000000              mov rax, 0
    83 000000F3 E8(00000000)            call printf
    84                                  
    85                                  
    86                                  
    87                                  ; Pour fermer le programme proprement :
    88 000000F8 B83C000000              mov    rax, 60         
    89 000000FD BF00000000              mov    rdi, 0
    90 00000102 0F05                    syscall
    91                                  
    92 00000104 C3                      ret
