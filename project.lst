     1                                  ; external functions from X11 library
     2                                  extern XOpenDisplay
     3                                  extern XDisplayName
     4                                  extern XCloseDisplay
     5                                  extern XCreateSimpleWindow
     6                                  extern XMapWindow
     7                                  extern XRootWindow
     8                                  extern XSelectInput
     9                                  extern XFlush
    10                                  extern XCreateGC
    11                                  extern XSetForeground
    12                                  extern XDrawLine
    13                                  extern XDrawPoint
    14                                  extern XFillArc
    15                                  extern XNextEvent
    16                                  
    17                                  ; external functions from stdio library (ld-linux-x86-64.so.2)    
    18                                  extern printf
    19                                  extern exit
    20                                  
    21                                  %define	StructureNotifyMask	131072
    22                                  %define KeyPressMask		1
    23                                  %define ButtonPressMask		4
    24                                  %define MapNotify		19
    25                                  %define KeyPress		2
    26                                  %define ButtonPress		4
    27                                  %define Expose			12
    28                                  %define ConfigureNotify		22
    29                                  %define CreateNotify 16
    30                                  %define QWORD	8
    31                                  %define DWORD	4
    32                                  %define WORD	2
    33                                  %define BYTE	1
    34                                  
    35                                  global orientation
    36                                  orientation:
    37                                      ; Coord de P dans di et si
    38                                      ; Coord de I dans dx et cx
    39                                      ; Coord de Q dans r8w et r9w
    40                                      
    41                                      ; cx sera bientôt modifié mais on doit l'utiliser 2 fois
    42                                      ; Donc on le sauvegarde
    43                                      
    44                                      
    45                                      
    46 00000000 51                          push rcx
    47 00000001 4829F1                      sub rcx, rsi
    48 00000004 4929D0                      sub r8, rdx
    49                                      
    50 00000007 490FAFC8                    imul rcx, r8
    51                                      
    52                                      ; Nous n'utiliserons plus si
    53                                      ; Donc nous restaurons la valeur de cx dans si
    54 0000000B 5E                          pop rsi
    55 0000000C 4829FA                      sub rdx, rdi
    56 0000000F 4929F1                      sub r9, rsi
    57                                      
    58 00000012 490FAFD1                    imul rdx, r9
    59                                      
    60 00000016 4829D1                      sub rcx, rdx
    61                                      
    62 00000019 4883F900                    cmp rcx, 0
    63 0000001D 7C07                        jl clockwise
    64                                      
    65 0000001F B801000000                  mov eax, 1
    66 00000024 EB05                        jmp endori
    67                                      
    68                                      clockwise:
    69 00000026 B800000000                  mov eax, 0
    70                                      
    71                                      endori:
    72 0000002B C3                      ret
    73                                  
    74                                  global main
    75                                  
    76                                  %DEFINE NUM_POINTS 80
    77                                  %DEFINE MAX_X 255
    78                                  %DEFINE MAX_Y 255
    79                                  
    80                                  section .data
    81 00000000 0000000000000000-       event:		times	24 dq 0
    81 00000000 <rep 18h>          
    82                                  
    83 000000C0 00000000                x1:	dd	0
    84 000000C4 00000000                x2:	dd	0
    85 000000C8 00000000                y1:	dd	0
    86 000000CC 00000000                y2:	dd	0
    87                                  
    88 000000D0 25640A00                fmt_printf: db "%d", 10, 0
    89 000000D4 76733A2025640A00        fmt_index: db "vs: %d", 10, 0
    90 000000DC 4D696E696D756D3A20-     fmt_min: db "Minimum: %d", 10, 0
    90 000000E5 25640A00           
    91                                  
    92 000000E9 546573740A00            test: db "Test", 10, 0
    93 000000EF 78203A2025640A00        printx: db "x : %d", 10, 0
    94 000000F7 79203A2025640A00        printy: db "y : %d", 10, 0
    95 000000FF 456E76656C6F707065-     env: db "Enveloppe: %d", 10, 0
    95 00000108 3A2025640A00       
    96 0000010E 436F65663A2025640A-     coef: db "Coef: %d", 10, 0
    96 00000117 00                 
    97 00000118 526573756C7461743A-     resultat: db "Resultat: %d", 10, 0
    97 00000121 2025640A00         
    98                                  
    99                                  section .bss
   100 00000000 ????????????????        display_name:	resq	1
   101 00000008 ????????                screen:		resd	1
   102 0000000C ????????                depth:         	resd	1
   103 00000010 ????????                connection:    	resd	1
   104 00000014 ????????                width:         	resd	1
   105 00000018 ????????                height:        	resd	1
   106 0000001C ????????????????        window:		resq	1
   107 00000024 ????????????????        gc:		resq	1
   108                                  
   109 0000002C <res A0h>               coordx: resw NUM_POINTS
   110 000000CC <res A0h>               coordy: resw NUM_POINTS
   111 0000016C <res A0h>               enveloppe: resw NUM_POINTS
   112 0000020C ??                      sizeEnveloppe: resb 1
   113 0000020D ????                    randnum: resw 1
   114 0000020F ????                    minpoint: resw 1
   115                                  
   116 00000211 ????                    P: resw 1
   117 00000213 ????                    Q: resw 1
   118 00000215 ????                    I: resw 1
   119                                  
   120 00000217 ????                    lastPointX: resw 1
   121 00000219 ????                    lastPointY: resw 1
   122 0000021B ??                      isInside: resb 1
   123 0000021C ????                    checkIndex: resw 1
   124                                  
   125                                  section .text
   126                                  
   127                                  main:
   128                                  ;Génération des points du programme
   129 0000002C BB00000000              mov rbx, 0
   130                                  populatex:
   131 00000031 660FC7F0                    rdrand ax
   132 00000035 66890425[0D020000]          mov [randnum], ax
   133                                      modx:
   134 0000003D 66812C25[0D020000]-             sub word[randnum], MAX_X
   134 00000045 FF00               
   135 00000047 66813C25[0D020000]-             cmp word[randnum], MAX_X
   135 0000004F FF00               
   136 00000051 73EA                            jae modx
   137 00000053 668B0425[0D020000]          mov ax, word[randnum]
   138 0000005B 6689841B[2C000000]          mov word[coordx+rbx*2], ax    
   139 00000063 48FFC3                      inc rbx
   140 00000066 4883FB50                    cmp rbx, NUM_POINTS
   141 0000006A 72C5                        jb populatex
   142                                  
   143 0000006C BB00000000              mov rbx, 0
   144                                  populatey:
   145 00000071 F9                          stc
   146                                      checkcf:
   147 00000072 660FC7F0                        rdrand ax
   148 00000076 73FA                        jnc checkcf
   149 00000078 66890425[0D020000]          mov word[randnum], ax
   150                                      mody:
   151 00000080 66812C25[0D020000]-             sub word[randnum], MAX_Y
   151 00000088 FF00               
   152 0000008A 66813C25[0D020000]-             cmp word[randnum], MAX_Y
   152 00000092 FF00               
   153 00000094 73EA                            jae mody
   154 00000096 668B0425[0D020000]          mov ax, word[randnum]
   155 0000009E 6689841B[CC000000]          mov word[coordy+rbx*2], ax
   156                                  
   157 000000A6 48FFC3                      inc rbx
   158 000000A9 4883FB50                    cmp rbx, NUM_POINTS
   159 000000AD 72C2                        jb populatey
   160                                     
   161 000000AF BB00000000              mov rbx, 0
   162                                  printloop:
   163 000000B4 48BF-                       mov rdi, printx
   163 000000B6 [EF00000000000000] 
   164 000000BE 480FB7B41B-                 movzx rsi, word[coordx+rbx*2]
   164 000000C3 [2C000000]         
   165 000000C7 B800000000                  mov rax, 0
   166 000000CC E8(00000000)                call printf
   167                                  
   168 000000D1 48BF-                       mov rdi, printy
   168 000000D3 [F700000000000000] 
   169 000000DB 480FB7B41B-                 movzx rsi, word[coordy+rbx*2]
   169 000000E0 [CC000000]         
   170 000000E4 B800000000                  mov rax, 0
   171 000000E9 E8(00000000)                call printf
   172                                      
   173 000000EE 48FFC3                      inc rbx
   174 000000F1 4883FB50                    cmp rbx, NUM_POINTS
   175 000000F5 72BD                        jb printloop
   176                                  
   177                                  ; Trouver le point le plus à gauche
   178 000000F7 BB00000000              mov rbx, 0
   179 000000FC 66891C25[0F020000]      mov word[minpoint], bx
   180 00000104 48FFC3                  inc rbx
   181                                  minAlgo:
   182                                      ; On récupère le point minimum actuel
   183 00000107 480FB70C25-                 movzx rcx, word[minpoint]
   183 0000010C [0F020000]         
   184 00000110 480FB78409-                 movzx rax, word[coordx+rcx*2]
   184 00000115 [2C000000]         
   185                                      
   186                                      ; On le compare au point parcouru actuel
   187 00000119 663B841B[2C000000]          cmp ax, word[coordx+rbx*2]
   188 00000121 760B                        jbe lower
   189                                              
   190                                      ; Si minpoint > point actuel, on mets point actuel dans minpoint
   191 00000123 4889D8                      mov rax, rbx
   192 00000126 66890425[0F020000]          mov word[minpoint], ax
   193                                  
   194                                      lower:
   195 0000012E 48FFC3                      inc rbx
   196 00000131 4883FB50                    cmp rbx, NUM_POINTS
   197 00000135 72D0                        jb minAlgo
   198                                      
   199                                  ; Une fois cette étape fini, nous connaissons le point le plus à gauche.
   200                                  ; Marche de Jarvis
   201                                  ; rax = Prochain point (P)
   202                                  ; rbx = Index actuel de enveloppe (Pas d'équivalent, à ne pas utiliser pr l'instant)
   203                                  ; rcx = Prochain candidat de P (Q)
   204 00000137 4831C0                  xor rax, rax
   205 0000013A 668B0425[0F020000]      mov ax, word[minpoint]
   206 00000142 66890425[11020000]      mov word[P], ax
   207 0000014A 66C70425[0C020000]-     mov word[sizeEnveloppe], 0
   207 00000152 0000               
   208                                  jarvis:
   209 00000154 668B0425[11020000]          mov ax, word[P]
   210 0000015C 4831DB                      xor rbx, rbx
   211 0000015F 480FB71C25-                 movzx rbx, word[sizeEnveloppe]
   211 00000164 [0C020000]         
   212 00000168 6689841B[6C010000]          mov word[enveloppe+rbx*2], ax
   213                                      
   214 00000170 66890425[13020000]          mov word[Q], ax
   215 00000178 66FF0425[13020000]          inc word[Q]
   216 00000180 66833C25[13020000]-         cmp word[Q], NUM_POINTS
   216 00000188 50                 
   217 00000189 7209                        jb nofix
   218                                      
   219 0000018B 66832C25[13020000]-         sub word[Q], NUM_POINTS
   219 00000193 50                 
   220                                      
   221                                      nofix:
   222 00000194 66C70425[15020000]-         mov word[I], 0
   222 0000019C 0000               
   223                                      parcoursListe:
   224 0000019E 668B1C25[11020000]              mov bx, word[P]
   225 000001A6 66391C25[15020000]              cmp word[I], bx
   226 000001AE 7471                            je nocandid
   227                                          ; Coord de P dans di et si
   228 000001B0 480FBF0425-                     movsx rax, word[P]
   228 000001B5 [11020000]         
   229 000001B9 480FBFBC00-                     movsx rdi, word[coordx+rax*2]
   229 000001BE [2C000000]         
   230 000001C2 480FBFB400-                     movsx rsi, word[coordy+rax*2]
   230 000001C7 [CC000000]         
   231                                          
   232                                          ; Coord de I dans dx et cx
   233 000001CB 480FBF0425-                     movsx rax, word[I]
   233 000001D0 [15020000]         
   234 000001D4 480FBF9400-                     movsx rdx, word[coordx+rax*2]
   234 000001D9 [2C000000]         
   235 000001DD 480FBF8C00-                     movsx rcx, word[coordy+rax*2]
   235 000001E2 [CC000000]         
   236                                          
   237                                          ; Coord de Q dans r8w et r9w
   238 000001E6 480FBF0425-                     movsx rax, word[Q]
   238 000001EB [13020000]         
   239 000001EF 4C0FBF8400-                     movsx r8, word[coordx+rax*2]
   239 000001F4 [2C000000]         
   240 000001F8 4C0FBF8C00-                     movsx r9, word[coordy+rax*2]
   240 000001FD [CC000000]         
   241 00000201 B800000000                      mov rax, 0
   242 00000206 E8F5FDFFFF                      call orientation
   243                                          
   244 0000020B 83F800                          cmp eax, 0
   245 0000020E 7E11                            jle nocandid
   246                                          
   247 00000210 480FB71C25-                     movzx rbx, word[I]
   247 00000215 [15020000]         
   248 00000219 66891C25[13020000]              mov word[Q], bx
   249                                          
   250                                          nocandid:
   251                                          
   252 00000221 66FF0425[15020000]              inc word[I]
   253 00000229 66833C25[15020000]-             cmp word[I], NUM_POINTS
   253 00000231 50                 
   254 00000232 0F8266FFFFFF                    jb parcoursListe    
   255 00000238 668B1C25[13020000]          mov bx, word[Q]
   256 00000240 66891C25[11020000]          mov word[P], bx
   257 00000248 66FF0425[0C020000]          inc word[sizeEnveloppe]
   258                                  
   259 00000250 668B1C25[0F020000]          mov bx, word[minpoint]
   260 00000258 66391C25[11020000]          cmp word[P], bx
   261 00000260 0F85EEFEFFFF                jne jarvis
   262                                  
   263                                  
   264 00000266 BB00000000              mov rbx, 0
   265                                  printenv:
   266 0000026B 48BF-                       mov rdi, env
   266 0000026D [FF00000000000000] 
   267 00000275 480FB7B41B-                 movzx rsi, word[enveloppe+rbx*2]
   267 0000027A [6C010000]         
   268 0000027E B800000000                  mov rax, 0
   269 00000283 E8(00000000)                call printf
   270                                  
   271 00000288 48FFC3                      inc rbx
   272 0000028B 663B1C25[0C020000]          cmp bx, word[sizeEnveloppe]
   273 00000293 72D6                        jb printenv  
   274                                      
   275 00000295 660FC7F0                rdrand ax
   276 00000299 66890425[17020000]      mov word[lastPointX], ax
   277                                  lastmodx:
   278 000002A1 66812C25[17020000]-         sub word[lastPointX], MAX_X
   278 000002A9 FF00               
   279 000002AB 66813C25[17020000]-         cmp word[lastPointX], MAX_X
   279 000002B3 FF00               
   280 000002B5 73EA                        jae lastmodx
   281                                      
   282 000002B7 660FC7F0                rdrand ax
   283 000002BB 66890425[19020000]      mov word[lastPointY], ax
   284                                  lastmody:
   285 000002C3 66812C25[19020000]-         sub word[lastPointY], MAX_Y
   285 000002CB FF00               
   286 000002CD 66813C25[19020000]-         cmp word[lastPointY], MAX_Y
   286 000002D5 FF00               
   287 000002D7 73EA                        jae lastmody
   288                                      
   289 000002D9 66C70425[1C020000]-     mov word[checkIndex], 0
   289 000002E1 0000               
   290 000002E3 66C70425[1B020000]-     mov word[isInside], 1
   290 000002EB 0100               
   291                                  checkInside:
   292 000002ED 480FB70425-                 movzx rax, word[checkIndex]
   292 000002F2 [1C020000]         
   293                                      
   294 000002F6 668B9C00[6C010000]          mov bx, word[enveloppe+rax*2]
   295 000002FE 66891C25[11020000]          mov word[P], bx
   296                                      
   297 00000306 66FFC0                      inc ax
   298 00000309 66390425[0C020000]          cmp word[sizeEnveloppe], ax
   299 00000311 7512                        jne nolooped
   300                                      
   301 00000313 668B1C25[6C010000]          mov bx, word[enveloppe]
   302 0000031B 66891C25[15020000]          mov word[I], bx
   303 00000323 EB10                        jmp endlooped
   304                                      
   305                                      nolooped:
   306 00000325 668B9C00[6C010000]          mov bx, word[enveloppe+(rax)*2]
   307 0000032D 66891C25[15020000]          mov word[I], bx
   308                                      
   309                                      endlooped:
   310 00000335 668B1C25[11020000]          mov bx, word[P]
   311 0000033D 66391C25[15020000]          cmp word[I], bx
   312 00000345 0F84D6FEFFFF                je nocandid
   313                                      ; Coord de P dans di et si
   314 0000034B 480FBF0425-                 movsx rax, word[P]
   314 00000350 [11020000]         
   315 00000354 480FBFBC00-                 movsx rdi, word[coordx+rax*2]
   315 00000359 [2C000000]         
   316 0000035D 480FBFB400-                 movsx rsi, word[coordy+rax*2]
   316 00000362 [CC000000]         
   317                                          
   318                                      ; Coord de I dans dx et cx
   319 00000366 480FBF0425-                 movsx rax, word[I]
   319 0000036B [15020000]         
   320 0000036F 480FBF9400-                 movsx rdx, word[coordx+rax*2]
   320 00000374 [2C000000]         
   321 00000378 480FBF8C00-                 movsx rcx, word[coordy+rax*2]
   321 0000037D [CC000000]         
   322                                      
   323                                      ; Coord de lastPoint dans r8w et r9w
   324 00000381 4C0FBF0425-                 movsx r8, word[lastPointX]
   324 00000386 [17020000]         
   325 0000038A 4C0FBF0C25-                 movsx r9, word[lastPointY]
   325 0000038F [19020000]         
   326 00000393 B800000000                  mov rax, 0
   327 00000398 E863FCFFFF                  call orientation
   328                                      
   329 0000039D 83F800                      cmp eax, 0
   330 000003A0 7F08                        jg nextCheck
   331                                      
   332 000003A2 C60425[1B020000]00          mov byte[isInside], 0
   333                                      
   334                                      nextCheck:
   335 000003AA 66FF0425[1C020000]          inc word[checkIndex]
   336 000003B2 480FB70425-                 movzx rax, word[sizeEnveloppe]
   336 000003B7 [0C020000]         
   337 000003BB 66390425[1C020000]          cmp word[checkIndex], ax
   338 000003C3 0F8224FFFFFF                jb checkInside
   339                                  
   340 000003C9 48BF-                       mov rdi, printx
   340 000003CB [EF00000000000000] 
   341 000003D3 480FB73425-                 movzx rsi, word[lastPointX]
   341 000003D8 [17020000]         
   342 000003DC B800000000                  mov rax, 0
   343 000003E1 E8(00000000)                call printf
   344                                      
   345 000003E6 48BF-                       mov rdi, printy
   345 000003E8 [F700000000000000] 
   346 000003F0 480FB73425-                 movzx rsi, word[lastPointY]
   346 000003F5 [19020000]         
   347 000003F9 B800000000                  mov rax, 0
   348 000003FE E8(00000000)                call printf
   349                                      
   350 00000403 48BF-                       mov rdi, resultat
   350 00000405 [1801000000000000] 
   351 0000040D 480FB63425-                 movzx rsi, byte[isInside]
   351 00000412 [1B020000]         
   352 00000416 B800000000                  mov rax, 0
   353 0000041B E8(00000000)                call printf
   354                                          
   355                                      ;###Fenetre dessin ###  
   356 00000420 4831FF                      xor     rdi,rdi
   357 00000423 E8(00000000)                call    XOpenDisplay	; Création de display
   358 00000428 48890425[00000000]          mov     qword[display_name],rax	; rax=nom du display
   359                                      
   360                                      ; display_name structure
   361                                      ; screen = DefaultScreen(display_name);
   362 00000430 488B0425[00000000]          mov     rax,qword[display_name]
   363 00000438 8B80E0000000                mov     eax,dword[rax+0xe0]
   364 0000043E 890425[08000000]            mov     dword[screen],eax
   365                                      
   366 00000445 488B3C25[00000000]          mov rdi,qword[display_name]
   367 0000044D 8B3425[08000000]            mov esi,dword[screen]
   368 00000454 E8(00000000)                call XRootWindow
   369 00000459 4889C3                      mov rbx,rax
   370                                      
   371 0000045C 488B3C25[00000000]          mov rdi,qword[display_name]
   372 00000464 4889DE                      mov rsi,rbx
   373 00000467 BA0A000000                  mov rdx,10
   374 0000046C B90A000000                  mov rcx,10
   375 00000471 41B890010000                mov r8,400	; largeur
   376 00000477 41B990010000                mov r9,400	; hauteur
   377 0000047D 68FFFFFF00                  push 0xFFFFFF	; background  0xRRGGBB
   378 00000482 6800FF0000                  push 0x00FF00
   379 00000487 6A01                        push 1
   380 00000489 E8(00000000)                call XCreateSimpleWindow
   381 0000048E 48890425[1C000000]          mov qword[window],rax
   382                                      
   383 00000496 488B3C25[00000000]          mov rdi,qword[display_name]
   384 0000049E 488B3425[1C000000]          mov rsi,qword[window]
   385 000004A6 BA05000200                  mov rdx,131077 ;131072
   386 000004AB E8(00000000)                call XSelectInput
   387                                      
   388 000004B0 488B3C25[00000000]          mov rdi,qword[display_name]
   389 000004B8 488B3425[1C000000]          mov rsi,qword[window]
   390 000004C0 E8(00000000)                call XMapWindow
   391                                      
   392 000004C5 488B3425[1C000000]          mov rsi,qword[window]
   393 000004CD BA00000000                  mov rdx,0
   394 000004D2 B900000000                  mov rcx,0
   395 000004D7 E8(00000000)                call XCreateGC
   396 000004DC 48890425[24000000]          mov qword[gc],rax
   397                                      
   398 000004E4 488B3C25[00000000]          mov rdi,qword[display_name]
   399 000004EC 488B3425[24000000]          mov rsi,qword[gc]
   400 000004F4 BA00000000                  mov rdx,0x000000	                       ; Couleur du crayon
   401 000004F9 E8(00000000)                call XSetForeground
   402                                  
   403                                  boucle:                                 ; boucle de gestion des évènements
   404 000004FE 488B3C25[00000000]          mov rdi,qword[display_name]
   405 00000506 48BE-                       mov rsi,event
   405 00000508 [0000000000000000] 
   406 00000510 E8(00000000)                call XNextEvent
   407                                      
   408 00000515 833C25[00000000]16          cmp dword[event],ConfigureNotify    ; à l'apparition de la fenêtre
   409 0000051D 7410                        je dessin       		       ; on saute au label 'dessin'
   410                                      
   411 0000051F 833C25[00000000]02          cmp dword[event],KeyPress           ; Si on appuie sur une touche
   412 00000527 0F8489030000                je closeDisplay		       ; on saute au label 'closeDisplay' qui ferme la fenêtre
   413 0000052D EBCF                        jmp boucle
   414                                      
   415                                  ;#########################################
   416                                  ;#        DEBUT DE LA ZONE DE DESSIN     #
   417                                  ;#########################################
   418                                  dessin:
   419                                  
   420                                      ; boucle dessin point  
   421 0000052F BB00000000                  mov rbx, 0  
   422                                      draw_point_loop:
   423                                  
   424                                          ;couleur du point 1
   425 00000534 488B3C25[00000000]              mov rdi,qword[display_name]
   426 0000053C 488B3425[24000000]              mov rsi,qword[gc]
   427 00000544 BA00000000                      mov edx,0x000000	; Couleur noire
   428 00000549 E8(00000000)                    call XSetForeground
   429                                          
   430                                          ; Dessin d'un point du point
   431 0000054E 488B3C25[00000000]              mov rdi,qword[display_name]
   432 00000556 488B3425[1C000000]              mov rsi,qword[window]
   433 0000055E 488B1425[24000000]              mov rdx,qword[gc]	
   434 00000566 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; coordonnée en x du point généré
   434 0000056B [2C000000]         
   435 0000056F 83E903                          sub ecx,3		
   436 00000572 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; coordonnée en y du point généré
   436 00000577 [CC000000]         
   437 0000057B 4983E803                        sub r8,3
   438 0000057F 41B906000000                    mov r9,6
   439 00000585 B8005A0000                      mov rax,23040
   440 0000058A 50                              push rax
   441 0000058B 6A00                            push 0
   442 0000058D 4151                            push r9
   443 0000058F E8(00000000)                    call XFillArc
   444                                  
   445                                          ;++loopcounter
   446 00000594 48FFC3                          inc rbx
   447                                          
   448                                          ;check if end loop
   449 00000597 4883FB50                        cmp rbx, NUM_POINTS
   450 0000059B 7297                            jb draw_point_loop
   451                                          
   452                                          
   453 0000059D 48BF-                           mov rdi, printy
   453 0000059F [F700000000000000] 
   454 000005A7 480FB73425-                     movzx rsi, word[sizeEnveloppe]
   454 000005AC [0C020000]         
   455 000005B0 B800000000                      mov rax, 0
   456 000005B5 E8(00000000)                    call printf
   457                                        
   458                                      ; boucle dessin ligne
   459 000005BA BB00000000                  mov rbx, 0 
   460 000005BF B800000000                  mov rax, 0
   461                                      draw_line_loop:
   462                                  
   463                                          ;couleur de la ligne 1
   464 000005C4 488B3C25[00000000]              mov rdi,qword[display_name]
   465 000005CC 488B3425[24000000]              mov rsi,qword[gc]
   466 000005D4 BA00000000                      mov edx,0x000000	; Couleur du crayon ; noir
   467 000005D9 E8(00000000)                    call XSetForeground
   468                                          
   469                                          ;###DEBUG###
   470 000005DE 56                              push rsi
   471                                          
   472 000005DF 48BF-                           mov rdi, printy
   472 000005E1 [F700000000000000] 
   473 000005E9 4889DE                          mov rsi, rbx
   474 000005EC B800000000                      mov rax, 0
   475 000005F1 E8(00000000)                    call printf
   476                                          
   477 000005F6 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   477 000005FB [6C010000]         
   478 000005FF 48BF-                           mov rdi, env
   478 00000601 [FF00000000000000] 
   479 00000609 4889CE                          mov rsi, rcx
   480 0000060C B800000000                      mov rax, 0
   481 00000611 E8(00000000)                    call printf
   482                                          
   483 00000616 5E                              pop rsi
   484                                          ;###END#OF#DEBUG###
   485                                          
   486                                          ;coordonnées de la ligne 1 (noire)
   487                                          
   488                                          ;Premier point
   489 00000617 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   489 0000061C [6C010000]         
   490                                          
   491                                          ;x
   492 00000620 0FB78409[2C000000]              movzx eax, word [coordx+rcx*2]
   493 00000628 890425[C0000000]                mov dword[x1],eax
   494 0000062F B800000000                      mov eax, 0
   495                                  
   496                                          ;y
   497 00000634 0FB78409[CC000000]              movzx eax, word [coordy+rcx*2]
   498 0000063C 890425[C8000000]                mov dword[y1],eax
   499 00000643 B800000000                      mov eax, 0
   500                                          
   501                                          ;Second point
   502 00000648 48FFC3                          inc rbx
   503                                          
   504                                          ;if rcx = sizeEnveloppe, go back to 1rst point
   505 0000064B B900000000                      mov rcx, 0
   506 00000650 480FB70C25-                     movzx rcx, word[sizeEnveloppe]  
   506 00000655 [0C020000]         
   507 00000659 4839CB                          cmp rbx , rcx
   508 0000065C 0F8483000000                    je set_draw_last_point
   509                                          
   510 00000662 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   510 00000667 [6C010000]         
   511                                          
   512 0000066B 0FB78409[2C000000]              movzx eax, word [coordx+rcx*2]
   513 00000673 890425[C4000000]                mov dword[x2], eax
   514 0000067A B800000000                      mov eax, 0
   515                                          
   516 0000067F 0FB78409[CC000000]              movzx eax, word [coordy+rcx*2]
   517 00000687 890425[CC000000]                mov dword[y2], eax
   518 0000068E B800000000                      mov eax, 0
   519                                          
   520                                          ; dessin de la ligne 1
   521 00000693 488B3C25[00000000]              mov rdi,qword[display_name]
   522 0000069B 488B3425[1C000000]              mov rsi,qword[window]
   523 000006A3 488B1425[24000000]              mov rdx,qword[gc]
   524 000006AB 8B0C25[C0000000]                mov ecx,dword[x1]	; coordonnée source en x
   525 000006B2 448B0425[C8000000]              mov r8d,dword[y1]	; coordonnée source en y
   526 000006BA 448B0C25[C4000000]              mov r9d,dword[x2]	; coordonnée destination en x
   527 000006C2 FF3425[CC000000]                push qword[y2]		; coordonnée destination en y
   528 000006C9 E8(00000000)                    call XDrawLine
   529                                          
   530                                          ;check if end loop
   531 000006CE B900000000                      mov rcx, 0
   532 000006D3 480FB70C25-                     movzx rcx, word[sizeEnveloppe]
   532 000006D8 [0C020000]         
   533 000006DC 4839CB                          cmp rbx , rcx
   534 000006DF 0F82DFFEFFFF                    jb draw_line_loop
   535                                          
   536                                      set_draw_last_point:    
   537 000006E5 BB00000000                      mov rbx, 0
   538 000006EA 480FB78C1B-                     movzx rcx, word[enveloppe+rbx*2]
   538 000006EF [6C010000]         
   539                                          
   540 000006F3 0FB78409[2C000000]              movzx eax, word [coordx+rcx*2]
   541 000006FB 890425[C4000000]                mov dword[x2], eax
   542 00000702 B800000000                      mov eax, 0
   543                                          
   544 00000707 0FB78409[CC000000]              movzx eax, word [coordy+rcx*2]
   545 0000070F 890425[CC000000]                mov dword[y2], eax
   546 00000716 B800000000                      mov eax, 0
   547                                          
   548                                          ; dessin de la ligne 1
   549 0000071B 488B3C25[00000000]              mov rdi,qword[display_name]
   550 00000723 488B3425[1C000000]              mov rsi,qword[window]
   551 0000072B 488B1425[24000000]              mov rdx,qword[gc]
   552 00000733 8B0C25[C0000000]                mov ecx,dword[x1]	; coordonnée source en x
   553 0000073A 448B0425[C8000000]              mov r8d,dword[y1]	; coordonnée source en y
   554 00000742 448B0C25[C4000000]              mov r9d,dword[x2]	; coordonnée destination en x
   555 0000074A FF3425[CC000000]                push qword[y2]	; coordonnée destination en y
   556 00000751 E8(00000000)                    call XDrawLine
   557                                          
   558                                      color_point_left:
   559                                          ;mov rbx, (le point en question)
   560 00000756 480FB71C25-                     movzx rbx, word[minpoint]
   560 0000075B [0F020000]         
   561                                          
   562                                          ;couleur du point 1
   563 0000075F 488B3C25[00000000]              mov rdi,qword[display_name]
   564 00000767 488B3425[24000000]              mov rsi,qword[gc]
   565 0000076F BAFF000000                      mov edx,0x0000FF	; Couleur bleu
   566 00000774 E8(00000000)                    call XSetForeground
   567                                          
   568                                          ;Dessin du point
   569 00000779 488B3C25[00000000]              mov rdi,qword[display_name]
   570 00000781 488B3425[1C000000]              mov rsi,qword[window]
   571 00000789 488B1425[24000000]              mov rdx,qword[gc]	
   572 00000791 480FB78C1B-                     movzx rcx, word [coordx+rbx*2] ; x
   572 00000796 [2C000000]         
   573 0000079A 83E903                          sub ecx,3		
   574 0000079D 4C0FB7841B-                     movzx r8, word [coordy+rbx*2] ; y
   574 000007A2 [CC000000]         
   575 000007A6 4983E803                        sub r8,3
   576 000007AA 41B906000000                    mov r9,6
   577 000007B0 B8005A0000                      mov rax,23040
   578 000007B5 50                              push rax
   579 000007B6 6A00                            push 0
   580 000007B8 4151                            push r9
   581 000007BA E8(00000000)                    call XFillArc
   582                                     
   583                                          ;Check inside point
   584 000007BF 480FB63425-                     movzx rsi, byte[isInside]
   584 000007C4 [1B020000]         
   585 000007C8 B800000000                      mov rax, 0  
   586 000007CD 4839C6                          cmp rsi ,rax
   587 000007D0 7462                            je color_point_out       
   588                                                
   589                                      color_point_in:
   590                                          ;mov rbx, (le point en question)
   591                                          ;mov rbx, 2
   592                                          ;couleur du point 1
   593 000007D2 488B3C25[00000000]              mov rdi,qword[display_name]
   594 000007DA 488B3425[24000000]              mov rsi,qword[gc]
   595 000007E2 BA00FF0000                      mov edx,0x00FF00	; Couleur vert
   596 000007E7 E8(00000000)                    call XSetForeground
   597                                          
   598                                          ; Dessin du point
   599 000007EC 488B3C25[00000000]              mov rdi,qword[display_name]
   600 000007F4 488B3425[1C000000]              mov rsi,qword[window]
   601 000007FC 488B1425[24000000]              mov rdx,qword[gc]	
   602 00000804 480FB70C25-                     movzx rcx, word[lastPointX] ; x
   602 00000809 [17020000]         
   603 0000080D 83E903                          sub ecx,3		
   604 00000810 4C0FB70425-                     movzx r8, word[lastPointY] ; y
   604 00000815 [19020000]         
   605 00000819 4983E803                        sub r8,3
   606 0000081D 41B906000000                    mov r9,6
   607 00000823 B8005A0000                      mov rax,23040
   608 00000828 50                              push rax
   609 00000829 6A00                            push 0
   610 0000082B 4151                            push r9
   611 0000082D E8(00000000)                    call XFillArc
   612 00000832 EB69                            jmp flush
   613                                  
   614                                  color_point_out:
   615                                          ;mov rbx, (le point en question)
   616 00000834 BB01000000                      mov rbx, 1
   617                                          ;couleur du point 1
   618 00000839 488B3C25[00000000]              mov rdi,qword[display_name]
   619 00000841 488B3425[24000000]              mov rsi,qword[gc]
   620 00000849 BA0000FF00                      mov edx,0xFF0000	; Couleur rouge
   621 0000084E E8(00000000)                    call XSetForeground
   622                                          
   623                                          ; Dessin du point
   624 00000853 488B3C25[00000000]              mov rdi,qword[display_name]
   625 0000085B 488B3425[1C000000]              mov rsi,qword[window]
   626 00000863 488B1425[24000000]              mov rdx,qword[gc]	
   627 0000086B 480FB70C25-                     movzx rcx, word[lastPointX] ; x
   627 00000870 [17020000]         
   628 00000874 83E903                          sub ecx,3		
   629 00000877 4C0FB70425-                     movzx r8, word[lastPointX] ; y
   629 0000087C [17020000]         
   630 00000880 4983E803                        sub r8,3
   631 00000884 41B906000000                    mov r9,6
   632 0000088A B8005A0000                      mov rax,23040
   633 0000088F 50                              push rax
   634 00000890 6A00                            push 0
   635 00000892 4151                            push r9
   636 00000894 E8(00000000)                    call XFillArc
   637 00000899 EB02                            jmp flush
   638                                  ; ############################
   639                                  ; # FIN DE LA ZONE DE DESSIN #
   640                                  ; ############################
   641 0000089B EB00                    jmp flush
   642                                  
   643                                  flush:
   644 0000089D 488B3C25[00000000]          mov rdi,qword[display_name]
   645 000008A5 E8(00000000)                call XFlush
   646 000008AA E94FFCFFFF                  jmp boucle
   647 000008AF B822000000                  mov rax,34
   648 000008B4 0F05                        syscall
   649                                  
   650                                  closeDisplay:
   651 000008B6 488B0425[00000000]          mov     rax,qword[display_name]
   652 000008BE 4889CF                      mov     rdi,rcx
   653 000008C1 E8(00000000)                call    XCloseDisplay
   654 000008C6 4831FF                      xor	    rdi,rdi
   655 000008C9 E8(00000000)                call    exit	
   656                                  
   657                                  ; Pour fermer le programme proprement :
   658 000008CE B83C000000              mov    rax, 60         
   659 000008D3 BF00000000              mov    rdi, 0
   660 000008D8 0F05                    syscall
   661                                  
   662 000008DA C3                      ret
